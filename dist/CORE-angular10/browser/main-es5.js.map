{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.sidebar.component.ts","webpack:///src/app/app.topbar.component.ts","webpack:///src/app/auth/can.activate.ts","webpack:///src/app/auth/login.component.ts","webpack:///src/app/group/group-create.component.ts","webpack:///src/app/group/group-delete.component.ts","webpack:///src/app/group/group-list.component.ts","webpack:///src/app/group/group-update.component.ts","webpack:///src/app/group/group-view.component.ts","webpack:///src/app/permission/permission-create.component.ts","webpack:///src/app/permission/permission-delete.component.ts","webpack:///src/app/permission/permission-list.component.ts","webpack:///src/app/permission/permission-update.component.ts","webpack:///src/app/permission/permission-view.component.ts","webpack:///src/app/service-route/service-route-create.component.ts","webpack:///src/app/service-route/service-route-delete.component.ts","webpack:///src/app/service-route/service-route-list.component.ts","webpack:///src/app/service-route/service-route-update.component.ts","webpack:///src/app/service-route/service-route-view.component.ts","webpack:///src/app/service/service-create.component.ts","webpack:///src/app/service/service-delete.component.ts","webpack:///src/app/service/service-list.component.ts","webpack:///src/app/service/service-update.component.ts","webpack:///src/app/service/service-view.component.ts","webpack:///src/app/user/user-create.component.ts","webpack:///src/app/user/user-delete.component.ts","webpack:///src/app/user/user-list.component.ts","webpack:///src/app/user/user-update.component.ts","webpack:///src/app/user/user-view.component.ts","webpack:///src/environments/environment.ts","webpack:///src/extension-methods/stringExtensions.ts","webpack:///src/helpers/processHelper.ts","webpack:///src/main.ts","webpack:///src/services/auth.service.ts","webpack:///src/services/group.service.ts","webpack:///src/services/permission.service.ts","webpack:///src/services/service.route.service.ts","webpack:///src/services/service.service.ts","webpack:///src/services/user.service.ts","webpack:///src/services/z.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","initialNavigation","imports","AppComponent","svcAuth","router","title","toggleState","isAuthenticated","isLoaded","FetchCurrentUser","subscribe","data","currentUser","error","navigateByUrl","selector","template","styles","AppModule","withServerTransition","appId","declarations","providers","bootstrap","AppSideBarComponent","modules","name","urlPath","AppTopBarComponent","onToggleSideBar","emit","document","cookie","location","reload","AuthGuardService","route","state","cookieObject","Object","fromEntries","split","map","c","key","v","decodeURIComponent","join","token","access_token","LoginComponent","form","username","password","loginResponse","Login","GroupCreateComponent","svcGroup","svcPermission","description","permissions","createdResponse","errors","paginate","permissionList","results","post","GroupDeleteComponent","group","params","slug","fetchServices","retreive","item","deletedResponse","GroupListComponent","displayedColumns","dataSource","populateServices","sort","paginator","GroupUpdateComponent","updatedResponse","a","put","GroupViewComponent","PermissionCreateComponent","svcServiceRoute","svcService","hasAllAccess","service","serviceRoutes","baseUrl","serviceRouteList","serviceList","PermissionDeleteComponent","permission","PermissionListComponent","PermissionUpdateComponent","PermissionViewComponent","ServiceRouteCreateComponent","url","method","ServiceRouteDeleteComponent","serviceRoute","ServiceRouteListComponent","ServiceRouteUpdateComponent","fetchCustomers","ServiceRouteViewComponent","ServiceCreateComponent","ServiceDeleteComponent","ServiceListComponent","ServiceUpdateComponent","ServiceViewComponent","UserCreateComponent","svcUser","firstname","middlename","lastname","email","birthdate","isActive","isSuperuser","groups","groupList","UserDeleteComponent","user","UserListComponent","UserUpdateComponent","UserViewComponent","environment","production","API_HOST","String","prototype","trimByMaxCharacter","maxCharacter","length","substr","IsServer","window","IsClient","addEventListener","bootstrapModule","err","console","AuthService","http","GroupService","PermissionService","ServiceRouteService","ServiceService","UserService","PaginationQuery","pageNumber","pageSize","filter","sortOrder","GenericService","apiHost","pagination","get","set","toString","headers","body","patch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,ysCA,QAAMC,MAAM,GAAW,CAErB;AAAEC,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAIrB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE,oFAA/B;AAAqDC,iBAAW,EAAE,CAAE,2EAAF;AAAlE,KAJqB,EAKrB;AAAEF,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,oFAAxC;AAA8DC,iBAAW,EAAE,CAAE,2EAAF;AAA3E,KALqB,EAMrB;AAAEF,UAAI,EAAE,iBAAR;AAA2BC,eAAS,EAAE,wFAAtC;AAA8DC,iBAAW,EAAE,CAAE,2EAAF;AAA3E,KANqB,EAOrB;AAAEF,UAAI,EAAE,qBAAR;AAA+BC,eAAS,EAAE,wFAA1C;AAAkEC,iBAAW,EAAE,CAAE,2EAAF;AAA/E,KAPqB,EAQrB;AAAEF,UAAI,EAAE,qBAAR;AAA+BC,eAAS,EAAE,wFAA1C;AAAkEC,iBAAW,EAAE,CAAE,2EAAF;AAA/E,KARqB,EAUrB;AAAEF,UAAI,EAAE,gBAAR;AAA0BC,eAAS,EAAE,qGAArC;AAAgEC,iBAAW,EAAE,CAAE,2EAAF;AAA7E,KAVqB,EAWrB;AAAEF,UAAI,EAAE,yBAAR;AAAmCC,eAAS,EAAE,sGAA9C;AAAyEC,iBAAW,EAAE,CAAE,2EAAF;AAAtF,KAXqB,EAYrB;AAAEF,UAAI,EAAE,uBAAR;AAAiCC,eAAS,EAAE,0GAA5C;AAAyEC,iBAAW,EAAE,CAAE,2EAAF;AAAtF,KAZqB,EAarB;AAAEF,UAAI,EAAE,2BAAR;AAAqCC,eAAS,EAAE,0GAAhD;AAA6EC,iBAAW,EAAE,CAAE,2EAAF;AAA1F,KAbqB,EAcrB;AAAEF,UAAI,EAAE,2BAAR;AAAqCC,eAAS,EAAE,0GAAhD;AAA6EC,iBAAW,EAAE,CAAE,2EAAF;AAA1F,KAdqB,EAgBrB;AAAEF,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE,8FAAlC;AAA2DC,iBAAW,EAAE,CAAE,2EAAF;AAAxE,KAhBqB,EAiBrB;AAAEF,UAAI,EAAE,sBAAR;AAAgCC,eAAS,EAAE,8FAA3C;AAAoEC,iBAAW,EAAE,CAAE,2EAAF;AAAjF,KAjBqB,EAkBrB;AAAEF,UAAI,EAAE,oBAAR;AAA8BC,eAAS,EAAE,kGAAzC;AAAoEC,iBAAW,EAAE,CAAE,2EAAF;AAAjF,KAlBqB,EAmBrB;AAAEF,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE,kGAA7C;AAAwEC,iBAAW,EAAE,CAAE,2EAAF;AAArF,KAnBqB,EAoBrB;AAAEF,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE,kGAA7C;AAAwEC,iBAAW,EAAE,CAAE,2EAAF;AAArF,KApBqB,EAsBrB;AAAEF,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,+EAA7B;AAAiDC,iBAAW,EAAE,CAAE,2EAAF;AAA9D,KAtBqB,EAuBrB;AAAEF,UAAI,EAAE,iBAAR;AAA2BC,eAAS,EAAE,+EAAtC;AAA0DC,iBAAW,EAAE,CAAE,2EAAF;AAAvE,KAvBqB,EAwBrB;AAAEF,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,mFAApC;AAA0DC,iBAAW,EAAE,CAAE,2EAAF;AAAvE,KAxBqB,EAyBrB;AAAEF,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,mFAAxC;AAA8DC,iBAAW,EAAE,CAAE,2EAAF;AAA3E,KAzBqB,EA0BrB;AAAEF,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,mFAAxC;AAA8DC,iBAAW,EAAE,CAAE,2EAAF;AAA3E,KA1BqB,EA4BrB;AAAEF,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE,4EAA5B;AAA+CC,iBAAW,EAAE,CAAE,2EAAF;AAA5D,KA5BqB,EA6BrB;AAAEF,UAAI,EAAE,gBAAR;AAA0BC,eAAS,EAAE,4EAArC;AAAwDC,iBAAW,EAAE,CAAE,2EAAF;AAArE,KA7BqB,EA8BrB;AAAEF,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,gFAAnC;AAAwDC,iBAAW,EAAE,CAAE,2EAAF;AAArE,KA9BqB,EA+BrB;AAAEF,UAAI,EAAE,kBAAR;AAA4BC,eAAS,EAAE,gFAAvC;AAA4DC,iBAAW,EAAE,CAAE,2EAAF;AAAzE,KA/BqB,EAgCrB;AAAEF,UAAI,EAAE,kBAAR;AAA4BC,eAAS,EAAE,gFAAvC;AAA4DC,iBAAW,EAAE,CAAE,2EAAF;AAAzE,KAhCqB,CAAvB;;QAyCaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBALlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,EAA6B;AACrCM,yBAAiB,EAAE;AADkB,OAA7B,CAAD,CAKkB,EAFjB,4DAEiB;;;;0HAAhBF,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAN5B,sDAM4B;eANnB;AACRG,iBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBL,MAArB,EAA6B;AACrCM,6BAAiB,EAAE;AADkB,WAA7B,CAAD,CADD;AAIRR,iBAAO,EAAE,CAAC,4DAAD;AAJD,S;AAMmB,Q;;;;;;;;;;;;;;;;;;AC/E7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAaM;;;;;;;;;;;;AAGE;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AACvD;;AACE;;AACF;;;;;;AAFa;;AAAA;;;;;;AAMb;;;;;;AAZJ;;AAEE;;AAEA;;AAOA;;AAIF;;;;;;;;;;AAbO;;AAAA,iGAAsD,UAAtD,EAAsD,GAAtD,EAAsD,UAAtD,EAAsD,GAAtD;;MARX;;;QA0BaU,Y;AACX,4BAAoBC,OAApB,EAAkDC,MAAlD,EAAkE;AAAA;;AAA9C,aAAAD,OAAA,GAAAA,OAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAElD,aAAAC,KAAA,GAAQ,gBAAR;AACA,aAAAC,WAAA,GAAsB,KAAtB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,QAAA,GAAW,KAAX;AALqE;;;;mCAO7D;AAAA;;AACN,cAAI,4EAAJ,EAAgB;AACd;AACD;;AAED,eAAKL,OAAL,CAAaM,gBAAb,GACCC,SADD,CAEE,UAAAC,IAAI,EAAI;AACN,iBAAI,CAACL,WAAL,GAAmB,IAAnB;AAEA,iBAAI,CAACH,OAAL,CAAaI,eAAb,GAA+B,IAA/B;AACA,iBAAI,CAACA,eAAL,GAAuB,KAAI,CAACJ,OAAL,CAAaI,eAApC;AACA,iBAAI,CAACJ,OAAL,CAAaS,WAAb,GAA2BD,IAA3B;AACD,WARH,EASE,gBAAa;AAAA,gBAAXE,KAAW,QAAXA,KAAW;AACX,iBAAI,CAACV,OAAL,CAAaI,eAAb,GAA+B,KAA/B;AACA,iBAAI,CAACA,eAAL,GAAuB,KAAI,CAACJ,OAAL,CAAaI,eAApC;;AACA,iBAAI,CAACH,MAAL,CAAYU,aAAZ;AACD,WAbH;AAeE,eAAKN,QAAL,GAAgB,IAAhB;AACH;;;0CAEc;AACb,eAAKF,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD;;;;;;;uBAjCUJ,Y,EAAY,sI,EAAA,uH;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,kJ;AAAA;AAAA;AApBrB;;;;AAAK;;;;;;;;;sEAoBIA,Y,EAAY;cAxBxB,uDAwBwB;eAxBd;AACTa,kBAAQ,EAAE,UADD;AAETC,kBAAQ,6dAFC;AAsBTC,gBAAM,EAAE;AAtBC,S;AAwBc,Q;;;;;;;;;;;;;;;;;;;;;;;;AC/BzsC,CAAA;AAOA;;;QAuLaC,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAZT,CACT,oEADS,EAGT,sEAHS,EAIT,4EAJS,EAKT,uFALS,EAMT,kFANS,EAOT,wEAPS,EAQT,sEARS,C;AASV,gBApDQ,CACP,wEAAcC,oBAAd,CAAmC;AAAEC,aAAK,EAAE;AAAT,OAAnC,CADO,EAEP,sEAFO,EAGP,qEAHO,EAKP,0DALO,EAMP,kEANO,EAQP,4FARO,EASP,4EATO,EAUP,4EAVO,EAWP,wEAXO,EAYP,sEAZO,EAaP,oFAbO,EAcP,gFAdO,EAeP,gFAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,yEAlBO,EAmBP,oFAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,2EAtBO,EAuBP,qEAvBO,EAwBP,8EAxBO,EAyBP,qEAzBO,EA0BP,2EA1BO,EA2BP,qEA3BO,EA4BP,+EA5BO,EA6BP,sFA7BO,EA8BP,uEA9BO,EA+BP,qEA/BO,EAgCP,4FAhCO,EAiCP,oFAjCO,EAkCP,yEAlCO,EAmCP,2EAnCO,EAoCP,8EApCO,EAqCP,uEArCO,EAsCP,qEAtCO,EAuCP,+EAvCO,EAyCP,2EAzCO,CAoDR;;;;0HAGUF,S,EAAS;AAAA,uBAzFlB,4DAyFkB,EAzFL,2EAyFK,EAzFe,yEAyFf,EAvFlB,qEAuFkB,EArFlB,qFAqFkB,EApFlB,qFAoFkB,EAnFlB,yFAmFkB,EAlFlB,yFAkFkB,EAjFlB,yFAiFkB,EA/ElB,sGA+EkB,EA9ElB,sGA8EkB,EA7ElB,0GA6EkB,EA5ElB,0GA4EkB,EA3ElB,0GA2EkB,EAzElB,8FAyEkB,EAxElB,8FAwEkB,EAvElB,kGAuEkB,EAtElB,kGAsEkB,EArElB,kGAqEkB,EAnElB,+EAmEkB,EAlElB,+EAkEkB,EAjElB,mFAiEkB,EAhElB,mFAgEkB,EA/DlB,mFA+DkB,EA7DlB,4EA6DkB,EA5DlB,4EA4DkB,EA3DlB,gFA2DkB,EA1DlB,gFA0DkB,EAzDlB,gFAyDkB;AAzDC,2FAInB,sEAJmB,EAKnB,qEALmB,EAOnB,0DAPmB,EAQnB,kEARmB,EAUnB,4FAVmB,EAWnB,4EAXmB,EAYnB,4EAZmB,EAanB,wEAbmB,EAcnB,sEAdmB,EAenB,oFAfmB,EAgBnB,gFAhBmB,EAiBnB,gFAjBmB,EAkBnB,uEAlBmB,EAmBnB,yEAnBmB,EAoBnB,yEApBmB,EAqBnB,oFArBmB,EAsBnB,qEAtBmB,EAuBnB,2EAvBmB,EAwBnB,2EAxBmB,EAyBnB,qEAzBmB,EA0BnB,8EA1BmB,EA2BnB,qEA3BmB,EA4BnB,2EA5BmB,EA6BnB,qEA7BmB,EA8BnB,+EA9BmB,EA+BnB,sFA/BmB,EAgCnB,uEAhCmB,EAiCnB,qEAjCmB,EAkCnB,4FAlCmB,EAmCnB,oFAnCmB,EAoCnB,yEApCmB,EAqCnB,2EArCmB,EAsCnB,8EAtCmB,EAuCnB,uEAvCmB,EAwCnB,qEAxCmB,EAyCnB,+EAzCmB,EA2CnB,2EA3CmB;AAyDD,O;AAdC,K;;;;;sEAcVA,S,EAAS;cA3FrB,sDA2FqB;eA3FZ;AACRG,sBAAY,EAAE,CACZ,4DADY,EACC,2EADD,EACqB,yEADrB,EAGZ,qEAHY,EAKZ,qFALY,EAMZ,qFANY,EAOZ,yFAPY,EAQZ,yFARY,EASZ,yFATY,EAWZ,sGAXY,EAYZ,sGAZY,EAaZ,0GAbY,EAcZ,0GAdY,EAeZ,0GAfY,EAiBZ,8FAjBY,EAkBZ,8FAlBY,EAmBZ,kGAnBY,EAoBZ,kGApBY,EAqBZ,kGArBY,EAuBZ,+EAvBY,EAwBZ,+EAxBY,EAyBZ,mFAzBY,EA0BZ,mFA1BY,EA2BZ,mFA3BY,EA6BZ,4EA7BY,EA8BZ,4EA9BY,EA+BZ,gFA/BY,EAgCZ,gFAhCY,EAiCZ,gFAjCY,CADN;AAoCRpB,iBAAO,EAAE,CACP,wEAAckB,oBAAd,CAAmC;AAAEC,iBAAK,EAAE;AAAT,WAAnC,CADO,EAEP,sEAFO,EAGP,qEAHO,EAKP,0DALO,EAMP,kEANO,EAQP,4FARO,EASP,4EATO,EAUP,4EAVO,EAWP,wEAXO,EAYP,sEAZO,EAaP,oFAbO,EAcP,gFAdO,EAeP,gFAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,yEAlBO,EAmBP,oFAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,2EAtBO,EAuBP,qEAvBO,EAwBP,8EAxBO,EAyBP,qEAzBO,EA0BP,2EA1BO,EA2BP,qEA3BO,EA4BP,+EA5BO,EA6BP,sFA7BO,EA8BP,uEA9BO,EA+BP,qEA/BO,EAgCP,4FAhCO,EAiCP,oFAjCO,EAkCP,yEAlCO,EAmCP,2EAnCO,EAoCP,8EApCO,EAqCP,uEArCO,EAsCP,qEAtCO,EAuCP,+EAvCO,EAyCP,2EAzCO,CApCD;AA+ERE,mBAAS,EAAE,CACT,oEADS,EAGT,sEAHS,EAIT,4EAJS,EAKT,uFALS,EAMT,kFANS,EAOT,wEAPS,EAQT,sEARS,CA/EH;AAyFRC,mBAAS,EAAE,CAAC,4DAAD;AAzFH,S;AA2FY,Q;;;;;;;;;;;;;;;;;;AC9LtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAeU;;AACE;;AACF;;;;;;AAFgD;;AAC9C;;AAAA;;;;;;QAYCC,mB,GApBb;AAAA;;AAqBE,WAAAnB,KAAA,GAAQ,gBAAR;AACA,WAAAoB,OAAA,GAAmB,CACjB;AAAEC,YAAI,EAAE,UAAR;AAAoBC,eAAO,EAAE;AAA7B,OADiB,EAEjB;AAAED,YAAI,EAAE,eAAR;AAAyBC,eAAO,EAAE;AAAlC,OAFiB,EAGjB;AACA;AAAED,YAAI,EAAE,QAAR;AAAkBC,eAAO,EAAE;AAA3B,OAJiB,EAKjB;AAAED,YAAI,EAAE,aAAR;AAAuBC,eAAO,EAAE;AAAhC,OALiB,EAMjB;AAAED,YAAI,EAAE,OAAR;AAAiBC,eAAO,EAAE;AAA1B,OANiB,CAAnB;AAUD,K;;;uBAZYH,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,kC;AAAA;AAAA;AAAA,O;AAAA,6B;AAAA,c;AAAA,a;AAAA,oQ;AAAA;AAAA;;;AAjB5B;;AACE;;AAEE;;AACE;;AAGF;;AAEF;;AACA;;AACE;;AACF;;AACF;;;;AAbgD;;AAClC;;AAAA,8FAAsB,MAAtB,EAAsB,MAAtB;;AAEU;;AAAA;;AACD;;AAAA;;;;;;;;;sEAadA,mB,EAAmB;cApB/B,uDAoB+B;eApBrB;AACTT,kBAAQ,EAAE,aADD;AAETC,kBAAQ,ilBAFC;AAkBTC,gBAAM,EAAE;AAlBC,S;AAoBqB,Q;;gBAW7B;;;;;;;;;;;;;;;;;;;;ACvCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AAeU;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAO;;AAC1D;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAQ;;AAC3D;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;MAblE;;;QAqBaW,kB;AACX,kCAAqBzB,OAArB,EAAyC;AAAA;;AAApB,aAAAA,OAAA,GAAAA,OAAA;AAIrB,aAAAE,KAAA,GAAQ,gBAAR;AAGU,aAAAwB,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AANR,aAAKjB,WAAL,GAAmBT,OAAO,CAACS,WAA3B;AACD;;;;mCAOO;AACN,eAAKiB,eAAL,CAAqBC,IAArB;AACD;;;sCAEU,CAAY;;;sCACZ,CAAY;;;qCACb;AACRC,kBAAQ,CAACC,MAAT;AACAD,kBAAQ,CAACE,QAAT,CAAkBC,MAAlB;AACD;;;;;;;uBAnBUN,kB,EAAkB,sI;AAAA,K;;;YAAlBA,kB;AAAkB,iC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,+U;AAAA;AAAA;AAhB3B;;AACE;;AAAwB;AAAA,mBAAS,cAAT;AAAwB,WAAxB;;AAA0B;;AAAU;;AAAI;;AAAW;;AAC3E;;AAA4D;;AAAU;;AAEtE;;AACE;;AAKF;;AACA;;AAA2E;;AAAkD;;AAAU;;AAAS;;AAAW;;AAC7J;;;;;;AADqB;;AAAA;;AAAwD;;AAAA;;;;;;;;;sEAKpEA,kB,EAAkB;cAnB9B,uDAmB8B;eAnBpB;AACTb,kBAAQ,EAAE,YADD;AAETC,kBAAQ,0zBAFC;AAiBTC,gBAAM,EAAE;AAjBC,S;AAmBoB,Q;;;;;;gBAQ5B;;;;;;;;;;;;;;;;;;;;ACjCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMakB,gB;AACX,gCAAoB/B,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAkB;;;;oCAE1BgC,K,EAA+BC,K,EAA0B;AAEnE,cAAI,4EAAJ,EAAgB;AACd,mBAAO,IAAP;AACD;;AAED,cAAIC,YAAY,GAAIC,MAAc,CAACC,WAAf,CAA2BT,QAAQ,CAACC,MAAT,CAAgBS,KAAhB,CAAsB,KAAtB,EAA6BC,GAA7B,CAAiC,UAAAC,CAAC,EAAI;AAAA,2BAC3DA,CAAC,CAACF,KAAF,CAAQ,GAAR,CAD2D;AAAA;AAAA,gBACzEG,GADyE;AAAA,gBACjEC,CADiE;;AAEjF,mBAAO,CAAED,GAAF,EAAOE,kBAAkB,CAACD,CAAC,CAACE,IAAF,CAAO,GAAP,CAAD,CAAzB,CAAP;AACH,WAH8C,CAA3B,CAApB;AAKA,cAAIC,KAAK,GAAGV,YAAY,CAACW,YAAzB;;AAEA,cAAI,CAACD,KAAL,EAAY;AACV,iBAAK5C,MAAL,CAAYU,aAAZ;AACA,mBAAO,KAAP;AACD;;AAED,iBAAO,IAAP;AACD;;;;;;;uBAtBUqB,gB,EAAgB,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyCae,c;AAEX,8BAAoB/C,OAApB,EAAkDC,MAAlD,EAAkE;AAAA;;AAA9C,aAAAD,OAAA,GAAAA,OAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAElD,aAAA+C,IAAA,GAAqB;AACnBC,kBAAQ,EAAE,OADS;AAEnBC,kBAAQ,EAAE;AAFS,SAArB;AAKA,aAAAC,aAAA,GAA+B;AAC7BN,eAAK,EAAE;AADsB,SAA/B;AAIA,aAAAnC,KAAA,GAAQ,EAAR;AAXqE;;;;wCAaxD;AAAA;;AACX,eAAKV,OAAL,CAAaoD,KAAb,CAAmB,KAAKJ,IAAxB,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,kBAAI,CAAC2C,aAAL,GAAqB3C,IAArB;AAEAoB,oBAAQ,CAACC,MAAT;AACAD,oBAAQ,CAACC,MAAT,0BAAkCrB,IAAI,CAACqC,KAAvC;;AACA,kBAAI,CAAC5C,MAAL,CAAYU,aAAZ,MACC5B,IADD,CACM,YAAM;AACV6C,sBAAQ,CAACE,QAAT,CAAkBC,MAAlB;AACD,aAHD;AAID,WAXD,EAYA,iBAAa;AAAA,gBAAXrB,KAAW,SAAXA,KAAW;AACX,kBAAI,CAACA,KAAL,GAAaA,KAAb;AACA,kBAAI,CAACV,OAAL,CAAaI,eAAb,GAA+B,KAA/B;AACAwB,oBAAQ,CAACC,MAAT;AACD,WAhBD;AAiBD;;;;;;;uBAjCUkB,c,EAAc,sI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2W;AAAA;AAAA;AAjCvB;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAQ;;AACnB;;AAA6C;AAAA;AAAA;;AAA7C;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,mBAAT;AAA6B,WAA7B;;AAA+B;;AAAK;;AAEjF;;AAEF;;AACF;;;;AAfwB;;AAAA;;AAKA;;AAAA;;;;;;;;;sEAefA,c,EAAc;cApC1B,uDAoC0B;eApChB;AACTnC,kBAAQ,EAAE,WADD;AAETC,kBAAQ,kiCAFC;AAiCTC,gBAAM,EAAE;AAjCC,S;AAoCgB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACzC3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA+CY;;AACE;;AACF;;;;;;AAF2D;;AACzD;;AAAA;;;;;;AAQJ;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcFuC,oB;AACX,oCAAoBC,QAApB,EAAoDC,aAApD,EAA8FtD,MAA9F,EAA8G;AAAA;;AAA1F,aAAAqD,QAAA,GAAAA,QAAA;AAAgC,aAAAC,aAAA,GAAAA,aAAA;AAA0C,aAAAtD,MAAA,GAAAA,MAAA;AAW9F,aAAA+C,IAAA,GAA0B;AACxBzB,cAAI,EAAE,EADkB;AAExBiC,qBAAW,EAAE,EAFW;AAGxBC,qBAAW,EAAE;AAHW,SAA1B;AAMA,aAAAC,eAAA,GAAsC;AACpCxE,cAAI,EAAE,EAD8B;AAEpCqC,cAAI,EAAE,EAF8B;AAGpCiC,qBAAW,EAAE,EAHuB;AAIpCC,qBAAW,EAAE;AAJuB,SAAtC;AAOA,aAAAE,MAAA,GAAmB,EAAnB;AAxBiH;;;;mCAEzG;AAAA;;AACN,eAAKJ,aAAL,CAAmBK,QAAnB,CAA4B,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAA5B,EACCrD,SADD,CACW,UAACC,IAAD,EAA6C;AACtD,kBAAI,CAACqD,cAAL,GAAsBrD,IAAI,CAACsD,OAA3B;AACD,WAHD;AAID;;;qCAmBS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;iCAEK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKL,QAAL,CAAcS,IAAd,CAA4D,KAAKf,IAAjE,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACkD,eAAL,GAAuBlD,IAAvB;;AACA,kBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,iBAAa;AAAA,gBAAXD,KAAW,SAAXA,KAAW;AACX,kBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA1CU2C,oB,EAAoB,wI,EAAA,kJ,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,uf;AAAA;AAAA;AAxD7B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AAAyC;AAAA;AAAA;;AAAzC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AAAgD;AAAA;AAAA;;AAAhD;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AAA0B;AAAA;AAAA;;AACxB;;AAGF;;AACF;;AAEA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AArCsB;;AAAA;;AAOA;;AAAA;;AASU;;AAAA;;AACP;;AAAA;;AAQX;;AAAA;;;;;;;;;sEAeLA,oB,EAAoB;cA3DhC,uDA2DgC;eA3DtB;AACTzC,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AA2DsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAkDY;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMJ;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAWFmD,oB;AAYX,oCAAoBV,QAApB,EAAoDrD,MAApD,EAA4EgC,KAA5E,EAAmG;AAAA;;AAAA;;AAA/E,aAAAqB,QAAA,GAAAA,QAAA;AAAgC,aAAArD,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAT5E,aAAAgC,KAAA,GAAmB;AACjB/E,cAAI,EAAE,EADW;AAEjBqC,cAAI,EAAE,EAFW;AAGjBiC,qBAAW,EAAE,EAHI;AAIjBC,qBAAW,EAAE;AAJI,SAAnB;AAOA,aAAAE,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,SAAEA,EAAF;AAAA,iBAAU,MAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKd,QAAL,CAAce,QAAd,CAAkC,KAAKF,IAAvC,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,kBAAI,CAACL,KAAL,GAAaK,IAAb;AACD,WAHD;AAID;;;iCAEK;AAAA;;AACJ,eAAKX,MAAL,GAAc,EAAd;AACA,eAAKL,QAAL,WAA0C,KAAKa,IAA/C,EACC5D,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,kBAAI,CAAC+D,eAAL,GAAuB/D,IAAvB;;AACA,kBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,iBAAa;AAAA,gBAAXD,KAAW,SAAXA,KAAW;AACX,kBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA1CUsD,oB,EAAoB,wI,EAAA,uH,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,wa;AAAA;AAAA;AA1D7B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;AAEA;;AAMA;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AACF;;;;AAvCsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAUG;;AAAA;;AAMX;;AAAA;;;;;;;;;sEAYLA,oB,EAAoB;cA7DhC,uDA6DgC;eA7DtB;AACTpD,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AA6DsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA6BY;;AAAuD;;AAAK;;;;;;AAC5D;;AAAqC;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAY;;;;;;AACnE;;AAAqC;;AAA4C;;;;;;AAA5C;;AAAA;;;;;;AAIrC;;AAAuC;;AAAQ;;;;;;;;AAIzC;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AACzD;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AAC7D;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;;;;;AALnE;;AACE;;AACE;;AAKF;;AACA;;AAAsD;;AAAU;;AAAS;;AAAW;;AACtF;;;;;;AAD0B;;AAAA;;;;;;AAI5B;;;;;;AACA;;;;;;;;QAQG2D,kB;AACX,kCAAoBlB,QAApB,EAAoDrD,MAApD,EAAoE;AAAA;;AAAhD,aAAAqD,QAAA,GAAAA,QAAA;AAAgC,aAAArD,MAAA,GAAAA,MAAA;AAIpD,aAAAwE,gBAAA,GAA6B,CAAC,MAAD,EAAS,aAAT,EAAwB,MAAxB,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AALuE;;;;mCAO/D;AACN,eAAKC,gBAAL;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,eAAKF,UAAL,CAAgBG,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;2CAEe;AAAA;;AACd,eAAKvB,QAAL,CAAcM,QAAd,CAAuB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAvB,EACCrD,SADD,CACW,UAACC,IAAD,EAAwC;AACjD,kBAAI,CAACkE,UAAL,CAAgBlE,IAAhB,GAAuBA,IAAI,CAACsD,OAA5B;AACD,WAHD;AAID;;;6BAEKxE,E,EAAY;AAChB,eAAKW,MAAL,CAAYU,aAAZ,wBAA0CrB,EAA1C;AACD;;;iCACK;AACJ,eAAKW,MAAL,CAAYU,aAAZ;AACD;;;+BACOrB,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,0BAA4CrB,EAA5C;AACD;;;gCACOA,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,0BAA4CrB,EAA5C;AACD;;;;;;;uBAhCUkF,kB,EAAkB,wI,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;0EAGlB,8D,EAAS,I;;0EACT,wE,EAAc,I;;;;;;;;;;;;;;;AAlDvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AAAwC;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAU;;AAAG;;AAAW;;AAExF;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AAEA;;AACF;;AACF;;;;AAhCqB;;AAAA;;AA0BI;;AAAA;;AACP;;AAAA;;AAGC;;AAAA;;;;;;;;;sEAKVA,kB,EAAkB;cAjD9B,uDAiD8B;eAjDpB;AACT5D,kBAAQ,EAAE,gBADD;AAETC,kBAAQ;AAFC,S;AAiDoB,Q;;;;;;;;gBAG5B,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;gBACnB,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;ACjE3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAiDY;;AACE;;AACF;;;;;;AAF2D;;AACzD;;AAAA;;;;;;AAQJ;;AAA4E;;AAAS;;;;;;AAAT;;AAAA;;;;;;AAD9E;;AACE;;AACF;;;;;;AADQ;;AAAA;;;;QAYHiE,oB;AACX,oCAAoBxB,QAApB,EAAmDC,aAAnD,EAA6FtD,MAA7F,EAAqHgC,KAArH,EAA4I;AAAA;;AAAA;;AAAxH,aAAAqB,QAAA,GAAAA,QAAA;AAA+B,aAAAC,aAAA,GAAAA,aAAA;AAA0C,aAAAtD,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAoBrH,aAAAe,IAAA,GAA0B;AACxBzB,cAAI,EAAE,EADkB;AAExBiC,qBAAW,EAAE,EAFW;AAGxBC,qBAAW,EAAE;AAHW,SAA1B;AAKA,aAAAsB,eAAA,GAAsC;AACpC7F,cAAI,EAAE,EAD8B;AAEpCqC,cAAI,EAAE,EAF8B;AAGpCiC,qBAAW,EAAE,EAHuB;AAIpCC,qBAAW,EAAE;AAJuB,SAAtC;AAOA,aAAAE,MAAA,GAAmB,EAAnB;AA/BE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,SAAEA,EAAF;AAAA,iBAAU,MAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;mCAEM;AAAA;;AACN,eAAKgE,QAAL,CAAce,QAAd,CAAkC,KAAKF,IAAvC,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACtB,IAAL,CAAUzB,IAAV,GAAiB+C,IAAI,CAAC/C,IAAtB;AACA,mBAAI,CAACyB,IAAL,CAAUQ,WAAV,GAAwBc,IAAI,CAACd,WAA7B;AACA,mBAAI,CAACR,IAAL,CAAUS,WAAV,GAAwBa,IAAI,CAACb,WAAL,CAAiBlB,GAAjB,CAAqB,UAAAyC,CAAC;AAAA,qBAAIA,CAAC,CAAC9F,IAAN;AAAA,aAAtB,CAAxB;AACD,WALD;AAMA,eAAKqE,aAAL,CAAmBK,QAAnB,CAA4B,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAA5B,EACCrD,SADD,CACW,UAACC,IAAD,EAA6C;AACtD,mBAAI,CAACqD,cAAL,GAAsBrD,IAAI,CAACsD,OAA3B;AACD,WAHD;AAID;;;qCAqBS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;iCAEK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKL,QAAL,CAAc2B,GAAd,CAA2D,KAAKd,IAAhE,EAAsE,KAAKnB,IAA3E,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACuE,eAAL,GAAuBvE,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,iBAAa;AAAA,gBAAXD,KAAW,SAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBApDUoE,oB,EAAoB,wI,EAAA,kJ,EAAA,uH,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,wiB;AAAA;AAAA;AAtD7B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AAAyC;AAAA;AAAA;;AAAzC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AAAgD;AAAA;AAAA;;AAAhD;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AAA0B;AAAA;AAAA;;AACxB;;AAGF;;AACF;;AAEA;;AAEA;;AAIA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AAnCsB;;AAAA;;AAOA;;AAAA;;AASU;;AAAA;;AACP;;AAAA;;AAQX;;AAAA;;;;;;;;;sEAaLA,oB,EAAoB;cAzDhC,uDAyDgC;eAzDtB;AACTlE,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AAyDsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAgDY;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QASDqE,kB;AAUX,kCAAoB5B,QAApB,EAAoDrD,MAApD,EAA4EgC,KAA5E,EAAmG;AAAA;;AAAA;;AAA/E,aAAAqB,QAAA,GAAAA,QAAA;AAAgC,aAAArD,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAP5E,aAAAgC,KAAA,GAAmB;AACjB/E,cAAI,EAAE,EADW;AAEjBqC,cAAI,EAAE,EAFW;AAGjBiC,qBAAW,EAAE,EAHI;AAIjBC,qBAAW,EAAE;AAJI,SAAnB;AAQE,aAAKxB,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,SAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKd,QAAL,CAAce,QAAd,CAAkC,KAAKF,IAAvC,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACL,KAAL,GAAaK,IAAb;AACD,WAHD;AAID;;;;;;;uBA3BUY,kB,EAAkB,wI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,wR;AAAA;AAAA;AAlD3B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;AAEF;;AACF;;;;AA/BsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAUG;;AAAA;;;;;;;;;sEAUhBA,kB,EAAkB;cArD9B,uDAqD8B;eArDpB;AACTtE,kBAAQ,EAAE,gBADD;AAETC,kBAAQ;AAFC,S;AAqDoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AC1D/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAgDY;;AAAiE;;AAAa;;;;;;AAAjC;;AAAoB;;AAAA;;;;;;AAgBjE;;AACA;;AACA;;;;;;AAFwD;;AACxD;;AAAA;;;;;;;;AANJ;;AACE;;AACE;;AACF;;AACA;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAGF;;AACF;;;;;;AAL4B;;AAAA;;AACP;;AAAA;;;;;;AASnB;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcFsE,yB;AACX,yCAAoB5B,aAApB,EACoB6B,eADpB,EAEoBC,UAFpB,EAGoBpF,MAHpB,EAGoC;AAAA;;AAHhB,aAAAsD,aAAA,GAAAA,aAAA;AACA,aAAA6B,eAAA,GAAAA,eAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAApF,MAAA,GAAAA,MAAA;AAgBpB,aAAA+C,IAAA,GAA+B;AAC7BzB,cAAI,EAAE,EADuB;AAE7BiC,qBAAW,EAAE,EAFgB;AAG7B8B,sBAAY,EAAE,KAHe;AAI7BC,iBAAO,EAAE,EAJoB;AAK7BC,uBAAa,EAAE;AALc,SAA/B;AAQA,aAAA9B,eAAA,GAA4C;AAC1CxE,cAAI,EAAE,EADoC;AAE1CqC,cAAI,EAAE,EAFoC;AAG1CiC,qBAAW,EAAE,EAH6B;AAI1C8B,sBAAY,EAAE,KAJ4B;AAK1CC,iBAAO,EAAE;AACPrG,gBAAI,EAAE,EADC;AAEPqC,gBAAI,EAAE,EAFC;AAGPiC,uBAAW,EAAE,EAHN;AAIPiC,mBAAO,EAAE;AAJF,WALiC;AAW1CD,uBAAa,EAAE;AAX2B,SAA5C;AAcA,aAAA7B,MAAA,GAAmB,EAAnB;AAtCuC;;;;mCAE/B;AAAA;;AACN,eAAKyB,eAAL,CAAqBxB,QAArB,CAA8B,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAA9B,EACCrD,SADD,CACW,UAACC,IAAD,EAA+C;AACxD,mBAAI,CAACkF,gBAAL,GAAwBlF,IAAI,CAACsD,OAA7B;AACD,WAHD;AAIA,eAAKuB,UAAL,CAAgBzB,QAAhB,CAAyB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAzB,EACCrD,SADD,CACW,UAACC,IAAD,EAA0C;AACnD,mBAAI,CAACmF,WAAL,GAAmBnF,IAAI,CAACsD,OAAxB;AACD,WAHD;AAID;;;qCA6BS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;iCAEK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKJ,aAAL,CAAmBQ,IAAnB,CAA2E,KAAKf,IAAhF,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACkD,eAAL,GAAuBlD,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,iBAAa;AAAA,gBAAXD,KAAW,SAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA3DUyE,yB,EAAyB,kJ,EAAA,uJ,EAAA,4I,EAAA,uH;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,e;AAAA,a;AAAA,glB;AAAA;AAAA;AAtElC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AAAY;AAAA;AAAA;;AACV;;AACF;;AACF;;AAEA;;AAEA;;AAA6B;AAAA;AAAA;;AAAqC;;AAAc;;AAEhF;;AACA;;AAEA;;AAWA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AAnDsB;;AAAA;;AAOA;;AAAA;;AAOJ;;AAAA;;AACE;;AAAA;;AAMa;;AAAA;;AAKM;;AAAA;;AAazB;;AAAA;;;;;;;;;sEAeLA,yB,EAAyB;cAzErC,uDAyEqC;eAzE3B;AACTvE,kBAAQ,EAAE,uBADD;AAETC,kBAAQ;AAFC,S;AAyE2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAkFY;;AACA;;AACA;;;;;;AADA;;AAAA;;;;;;AANJ;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;;;;;AAJqB;;AAAA;;;;;;AAOnB;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAWF+E,yB;AAmBX,yCAAoBrC,aAApB,EAA8DtD,MAA9D,EAAsFgC,KAAtF,EAA6G;AAAA;;AAAA;;AAAzF,aAAAsB,aAAA,GAAAA,aAAA;AAA0C,aAAAtD,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAhBtF,aAAA4D,UAAA,GAA6B;AAC3B3G,cAAI,EAAE,EADqB;AAE3BqC,cAAI,EAAE,EAFqB;AAG3BiC,qBAAW,EAAE,EAHc;AAI3B8B,sBAAY,EAAE,KAJa;AAK3BC,iBAAO,EAAE;AACPrG,gBAAI,EAAE,EADC;AAEPqC,gBAAI,EAAE,EAFC;AAGPiC,uBAAW,EAAE,EAHN;AAIPiC,mBAAO,EAAE;AAJF,WALkB;AAW3BD,uBAAa,EAAE;AAXY,SAA7B;AAcA,aAAA7B,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKb,aAAL,CAAmBc,QAAnB,CAA4C,KAAKF,IAAjD,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACuB,UAAL,GAAkBvB,IAAlB;AACD,WAHD;AAID;;;iCAEK;AAAA;;AACJ,eAAKX,MAAL,GAAc,EAAd;AACA,eAAKJ,aAAL,WAAoD,KAAKY,IAAzD,EACC5D,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAAC+D,eAAL,GAAuB/D,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBAjDUkF,yB,EAAyB,kJ,EAAA,uH,EAAA,+H;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,e;AAAA,c;AAAA,sd;AAAA;AAAA;AAzFlC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAmB;;AAC9B;;AACF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AACF;;AAEF;;AAEA;;AAEA;;AAA6B;AAAA;AAAA;;AAAsC;;AAAc;;AAEjF;;AACA;;AAEA;;AAWA;;AAMA;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AACF;;;;AAtEsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AASE;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAOS;;AAAA;;AAKM;;AAAA;;AAWzB;;AAAA;;;;;;;;;sEAYLA,yB,EAAyB;cA5FrC,uDA4FqC;eA5F3B;AACThF,kBAAQ,EAAE,uBADD;AAETC,kBAAQ;AAFC,S;AA4F2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA6BY;;AAAuD;;AAAK;;;;;;AAC5D;;AAAqC;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAY;;;;;;AACnE;;AAAqC;;AAA4C;;;;;;AAA5C;;AAAA;;;;;;AAIrC;;AAAuD;;AAAe;;;;;;AACtE;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAAuD;;AAAQ;;;;;;AAC/D;;AAAqC;;AAAwC;;;;;;AAAxC;;AAAA;;;;;;AAMrC;;AAAuC;;AAAQ;;;;;;;;AAIzC;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AACzD;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AAC7D;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;;;;;AALnE;;AACE;;AACE;;AAKF;;AACA;;AAAsD;;AAAU;;AAAS;;AAAW;;AACtF;;;;;;AAD0B;;AAAA;;;;;;AAI5B;;;;;;AACA;;;;;;;;QAQGiF,uB;AACX,uCAAoBvC,aAApB,EAA8DtD,MAA9D,EAA8E;AAAA;;AAA1D,aAAAsD,aAAA,GAAAA,aAAA;AAA0C,aAAAtD,MAAA,GAAAA,MAAA;AAI9D,aAAAwE,gBAAA,GAA6B,CAAC,MAAD,EAAS,aAAT,EAAwB,cAAxB,EAAwC,SAAxC,EAAmD,MAAnD,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AALiF;;;;mCAOzE;AACN,eAAKC,gBAAL;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,eAAKF,UAAL,CAAgBG,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;2CAEe;AAAA;;AACd,eAAKtB,aAAL,CAAmBK,QAAnB,CAA4B,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAA5B,EACCrD,SADD,CACW,UAACC,IAAD,EAA6C;AACtD,mBAAI,CAACkE,UAAL,CAAgBlE,IAAhB,GAAuBA,IAAI,CAACsD,OAA5B;AACD,WAHD;AAID;;;6BAEKxE,E,EAAY;AAChB,eAAKW,MAAL,CAAYU,aAAZ,6BAA+CrB,EAA/C;AACD;;;iCACK;AACJ,eAAKW,MAAL,CAAYU,aAAZ;AACD;;;+BACOrB,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,+BAAiDrB,EAAjD;AACD;;;gCACOA,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,+BAAiDrB,EAAjD;AACD;;;;;;;uBAhCUwG,uB,EAAuB,kJ,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;0EAGvB,8D,EAAS,I;;0EACT,wE,EAAc,I;;;;;;;;;;;;;;;AA9DvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AAAwC;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAU;;AAAG;;AAAW;;AAExF;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAIA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AAEA;;AACF;;AACF;;;;AA5CqB;;AAAA;;AAsCI;;AAAA;;AACP;;AAAA;;AAGC;;AAAA;;;;;;;;;sEAKVA,uB,EAAuB;cA7DnC,uDA6DmC;eA7DzB;AACTlF,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AA6DyB,Q;;;;;;;;gBAGjC,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;gBACnB,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AC7E3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAmDY;;AAAiE;;AAAa;;;;;;AAAjC;;AAAoB;;AAAA;;;;;;AAgBjE;;AACA;;AACA;;;;;;AAFwD;;AACxD;;AAAA;;;;;;;;AANJ;;AACE;;AACE;;AACF;;AACA;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAGF;;AACF;;;;;;AAL4B;;AAAA;;AACP;;AAAA;;;;;;AASnB;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcFkF,yB;AACX,yCAAoBxC,aAApB,EACU6B,eADV,EAEUC,UAFV,EAGUpD,KAHV,EAIUhC,MAJV,EAI0B;AAAA;;AAAA;;AAJN,aAAAsD,aAAA,GAAAA,aAAA;AACV,aAAA6B,eAAA,GAAAA,eAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAApD,KAAA,GAAAA,KAAA;AACA,aAAAhC,MAAA,GAAAA,MAAA;AA4BV,aAAA+C,IAAA,GAA+B;AAC7BzB,cAAI,EAAE,EADuB;AAE7BiC,qBAAW,EAAE,EAFgB;AAG7B8B,sBAAY,EAAE,KAHe;AAI7BC,iBAAO,EAAE,EAJoB;AAK7BC,uBAAa,EAAE;AALc,SAA/B;AAQA,aAAAT,eAAA,GAA4C;AAC1C7F,cAAI,EAAE,EADoC;AAE1CqC,cAAI,EAAE,EAFoC;AAG1CiC,qBAAW,EAAE,EAH6B;AAI1C8B,sBAAY,EAAE,KAJ4B;AAK1CC,iBAAO,EAAE;AACPrG,gBAAI,EAAE,EADC;AAEPqC,gBAAI,EAAE,EAFC;AAGPiC,uBAAW,EAAE,EAHN;AAIPiC,mBAAO,EAAE;AAJF,WALiC;AAW1CD,uBAAa,EAAE;AAX2B,SAA5C;AAcA,aAAA7B,MAAA,GAAmB,EAAnB;AAjDI,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;mCAEI;AAAA;;AACN,eAAKiE,aAAL,CAAmBc,QAAnB,CAA4C,KAAKF,IAAjD,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACtB,IAAL,CAAUzB,IAAV,GAAiB+C,IAAI,CAAC/C,IAAtB;AACA,mBAAI,CAACyB,IAAL,CAAUQ,WAAV,GAAwBc,IAAI,CAACd,WAA7B;AACA,mBAAI,CAACR,IAAL,CAAUsC,YAAV,GAAyBhB,IAAI,CAACgB,YAA9B;AACA,mBAAI,CAACtC,IAAL,CAAUuC,OAAV,GAAoBjB,IAAI,CAACiB,OAAL,CAAarG,IAAjC;AACA,mBAAI,CAAC8D,IAAL,CAAUwC,aAAV,GAA0BlB,IAAI,CAACkB,aAAL,CAAmBjD,GAAnB,CAAuB,UAAAyC,CAAC;AAAA,qBAAIA,CAAC,CAAC9F,IAAN;AAAA,aAAxB,CAA1B;AACD,WAPD;AAQA,eAAKkG,eAAL,CAAqBxB,QAArB,CAA8B,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAA9B,EACCrD,SADD,CACW,UAACC,IAAD,EAA+C;AACxD,mBAAI,CAACkF,gBAAL,GAAwBlF,IAAI,CAACsD,OAA7B;AACD,WAHD;AAIA,eAAKuB,UAAL,CAAgBzB,QAAhB,CAAyB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAzB,EACCrD,SADD,CACW,UAACC,IAAD,EAA0C;AACnD,mBAAI,CAACmF,WAAL,GAAmBnF,IAAI,CAACsD,OAAxB;AACD,WAHD;AAID;;;qCA+BU;AACT,eAAK7D,MAAL,CAAYU,aAAZ;AACA;;;iCAEI;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKJ,aAAL,CAAmB0B,GAAnB,CAA0E,KAAKd,IAA/E,EAAqF,KAAKnB,IAA1F,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACuE,eAAL,GAAuBvE,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBAxEUqF,yB,EAAyB,kJ,EAAA,uJ,EAAA,4I,EAAA,+H,EAAA,uH;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,e;AAAA,a;AAAA,glB;AAAA;AAAA;AAtElC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AAAY;AAAA;AAAA;;AACV;;AACF;;AACF;;AAEA;;AAEA;;AAA6B;AAAA;AAAA;;AAAqC;;AAAc;;AAEhF;;AACA;;AAEA;;AAWA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AAnDsB;;AAAA;;AAOA;;AAAA;;AAOJ;;AAAA;;AACE;;AAAA;;AAMa;;AAAA;;AAKM;;AAAA;;AAazB;;AAAA;;;;;;;;;sEAeLA,yB,EAAyB;cAzErC,uDAyEqC;eAzE3B;AACTnF,kBAAQ,EAAE,uBADD;AAETC,kBAAQ;AAFC,S;AAyE2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA+EY;;AACA;;AACA;;;;;;AADA;;AAAA;;;;;;AANJ;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;;;;;AAJqB;;AAAA;;;;QAUhBmF,uB;AAiBX,uCAAoBzC,aAApB,EAA8DtD,MAA9D,EAAsFgC,KAAtF,EAA6G;AAAA;;AAAA;;AAAzF,aAAAsB,aAAA,GAAAA,aAAA;AAA0C,aAAAtD,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAdtF,aAAA4D,UAAA,GAA6B;AAC3B3G,cAAI,EAAE,EADqB;AAE3BqC,cAAI,EAAE,EAFqB;AAG3BiC,qBAAW,EAAE,EAHc;AAI3B8B,sBAAY,EAAE,KAJa;AAK3BC,iBAAO,EAAE;AACPrG,gBAAI,EAAE,EADC;AAEPqC,gBAAI,EAAE,EAFC;AAGPiC,uBAAW,EAAE,EAHN;AAIPiC,mBAAO,EAAE;AAJF,WALkB;AAW3BD,uBAAa,EAAE;AAXY,SAA7B;AAeE,aAAKvD,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKb,aAAL,CAAmBc,QAAnB,CAA4C,KAAKF,IAAjD,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACuB,UAAL,GAAkBvB,IAAlB;AACD,WAHD;AAID;;;;;;;uBAlCU0B,uB,EAAuB,kJ,EAAA,uH,EAAA,+H;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,gX;AAAA;AAAA;AA/EhC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAmB;;AAC9B;;AACF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AACF;;AAEF;;AAEA;;AAA6B;AAAA;AAAA;;AAAsC;;AAAc;;AAEjF;;AACA;;AAEA;;AAWF;;AACF;;;;AA5DsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AASE;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKS;;AAAA;;AAKM;;AAAA;;;;;;;;;sEAe9BA,uB,EAAuB;cAlFnC,uDAkFmC;eAlFzB;AACTpF,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AAkFyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAkDY;;AAAiE;;AAAa;;;;;;AAAjC;;AAAoB;;AAAA;;;;;;AAOnE;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcFoF,2B;AACX,2CAAoBb,eAApB,EAAiEC,UAAjE,EAAqGpF,MAArG,EAAqH;AAAA;;AAAjG,aAAAmF,eAAA,GAAAA,eAAA;AAA6C,aAAAC,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAWrG,aAAA+C,IAAA,GAAiC;AAC/BkD,aAAG,EAAE,EAD0B;AAE/BC,gBAAM,EAAE,EAFuB;AAG/BZ,iBAAO,EAAE;AAHsB,SAAjC;AAMA,aAAA7B,eAAA,GAA6C;AAC3CxE,cAAI,EAAE,EADqC;AAE3CgH,aAAG,EAAE,EAFsC;AAG3CC,gBAAM,EAAE,EAHmC;AAI3CZ,iBAAO,EAAE;AAJkC,SAA7C;AAOA,aAAA5B,MAAA,GAAmB,EAAnB;AAxBwH;;;;mCAEhH;AAAA;;AACN,eAAK0B,UAAL,CAAgBzB,QAAhB,CAAyB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAzB,EACCrD,SADD,CACW,UAACC,IAAD,EAA0C;AACnD,mBAAI,CAACmF,WAAL,GAAmBnF,IAAI,CAACsD,OAAxB;AACD,WAHD;AAID;;;qCAmBS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;iCAEK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKyB,eAAL,CAAqBrB,IAArB,CAAiF,KAAKf,IAAtF,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACkD,eAAL,GAAuBlD,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA1CUuF,2B,EAA2B,uJ,EAAA,4I,EAAA,uH;AAAA,K;;;YAA3BA,2B;AAA2B,0C;AAAA,e;AAAA,a;AAAA,kjB;AAAA;AAAA;AAzDpC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAG;;AACd;;AAAwC;AAAA;AAAA;;AAAxC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAM;;AACjB;;AAAY;AAAA;AAAA;;AACV;;AAAwB;;AAAG;;AAC3B;;AAAyB;;AAAI;;AAC7B;;AAAwB;;AAAG;;AAC3B;;AAA2B;;AAAM;;AACnC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AAAY;AAAA;AAAA;;AACV;;AACF;;AACF;;AAEA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AAtCsB;;AAAA;;AAOJ;;AAAA;;AAYA;;AAAA;;AACE;;AAAA;;AAMN;;AAAA;;;;;;;;;sEAeLA,2B,EAA2B;cA5DvC,uDA4DuC;eA5D7B;AACTrF,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AA4D6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACvExC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAkEU;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAWFuF,2B;AAiBX,2CAAoBhB,eAApB,EAAkEnF,MAAlE,EAA0FgC,KAA1F,EAAiH;AAAA;;AAAA;;AAA7F,aAAAmD,eAAA,GAAAA,eAAA;AAA8C,aAAAnF,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAd1F,aAAAoE,YAAA,GAAiC;AAC/BnH,cAAI,EAAE,EADyB;AAE/BgH,aAAG,EAAE,EAF0B;AAG/BC,gBAAM,EAAE,EAHuB;AAI/BZ,iBAAO,EAAE;AACPrG,gBAAI,EAAE,EADC;AAEPqC,gBAAI,EAAE,EAFC;AAGPiC,uBAAW,EAAE,EAHN;AAIPiC,mBAAO,EAAE;AAJF;AAJsB,SAAjC;AAYA,aAAA9B,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKgB,eAAL,CAAqBf,QAArB,CAAgD,KAAKF,IAArD,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAAC+B,YAAL,GAAoB/B,IAApB;AACD,WAHD;AAID;;;iCAEK;AAAA;;AACJ,eAAKX,MAAL,GAAc,EAAd;AACA,eAAKyB,eAAL,WAAwD,KAAKjB,IAA7D,EACC5D,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAAC+D,eAAL,GAAuB/D,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA/CU0F,2B,EAA2B,uJ,EAAA,uH,EAAA,+H;AAAA,K;;;YAA3BA,2B;AAA2B,0C;AAAA,e;AAAA,a;AAAA,0Y;AAAA;AAAA;AArEpC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAmB;;AAC9B;;AACF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AACF;;AAEF;;AAEA;;AAMA;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AACF;;;;AAlDsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOE;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKV;;AAAA;;;;;;;;;sEAYLA,2B,EAA2B;cAxEvC,uDAwEuC;eAxE7B;AACTxF,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AAwE6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AC7ExC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA6BY;;AAAuD;;AAAI;;;;;;AAC3D;;AAAqC;;AAAoC;;;;;;AAApC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAO;;;;;;AAC9D;;AAAqC;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAQ;;;;;;AAC/D;;AAAqC;;AAAwC;;;;;;AAAxC;;AAAA;;;;;;AAIrC;;AAAuC;;AAAQ;;;;;;;;AAIzC;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AACzD;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AAC7D;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;;;;;AALnE;;AACE;;AACE;;AAKF;;AACA;;AAAsD;;AAAU;;AAAS;;AAAW;;AACtF;;;;;;AAD0B;;AAAA;;;;;;AAI5B;;;;;;AACA;;;;;;;;QAQGyF,yB;AACX,yCAAoBlB,eAApB,EAAkEnF,MAAlE,EAAkF;AAAA;;AAA9D,aAAAmF,eAAA,GAAAA,eAAA;AAA8C,aAAAnF,MAAA,GAAAA,MAAA;AAIlE,aAAAwE,gBAAA,GAA6B,CAAC,KAAD,EAAQ,QAAR,EAAkB,SAAlB,EAA6B,MAA7B,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AALqF;;;;mCAO7E;AACN,eAAKC,gBAAL;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,eAAKF,UAAL,CAAgBG,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;2CAEe;AAAA;;AACd,eAAKO,eAAL,CAAqBxB,QAArB,CAA8B,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAA9B,EACCrD,SADD,CACW,UAACC,IAAD,EAA+C;AACxD,mBAAI,CAACkE,UAAL,CAAgBlE,IAAhB,GAAuBA,IAAI,CAACsD,OAA5B;AACD,WAHD;AAID;;;6BAEKxE,E,EAAY;AAChB,eAAKW,MAAL,CAAYU,aAAZ,gCAAkDrB,EAAlD;AACD;;;iCACK;AACJ,eAAKW,MAAL,CAAYU,aAAZ;AACD;;;+BACOrB,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,kCAAoDrB,EAApD;AACD;;;gCACOA,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,kCAAoDrB,EAApD;AACD;;;;;;;uBAhCUgH,yB,EAAyB,uJ,EAAA,uH;AAAA,K;;;YAAzBA,yB;AAAyB,uC;AAAA;AAAA;0EAGzB,8D,EAAS,I;;0EACT,wE,EAAc,I;;;;;;;;;;;;;;;AAvDvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AAAwC;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAU;;AAAG;;AAAW;;AAExF;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AAEA;;AACF;;AACF;;;;AArCqB;;AAAA;;AA+BI;;AAAA;;AACP;;AAAA;;AAGC;;AAAA;;;;;;;;;sEAKVA,yB,EAAyB;cAtDrC,uDAsDqC;eAtD3B;AACT1F,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AAsD2B,Q;;;;;;;;gBAGnC,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;gBACnB,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;ACtE3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAmDY;;AAAiE;;AAAa;;;;;;AAAjC;;AAAoB;;AAAA;;;;;;AAOnE;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcF0F,2B;AAsBX,2CAAoBnB,eAApB,EAAiEC,UAAjE,EAAqGpF,MAArG,EAA6HgC,KAA7H,EAAoJ;AAAA;;AAAA;;AAAhI,aAAAmD,eAAA,GAAAA,eAAA;AAA6C,aAAAC,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAT7H,aAAAe,IAAA,GAAiC;AAC/BkD,aAAG,EAAE,EAD0B;AAE/BC,gBAAM,EAAE,EAFuB;AAG/BZ,iBAAO,EAAE;AAHsB,SAAjC;AAOA,aAAA5B,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;mCAtBM;AAAA;;AACN,eAAKkH,cAAL;AACA,eAAKnB,UAAL,CAAgBzB,QAAhB,CAAyB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAzB,EACCrD,SADD,CACW,UAACC,IAAD,EAA0C;AACnD,mBAAI,CAACmF,WAAL,GAAmBnF,IAAI,CAACsD,OAAxB;AACD,WAHD;AAID;;;qCAkBS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;yCACa;AAAA;;AACZ,eAAKyE,eAAL,CAAqBf,QAArB,CAAgD,KAAKF,IAArD,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACtB,IAAL,CAAUkD,GAAV,GAAgB5B,IAAI,CAAC4B,GAArB;AACA,mBAAI,CAAClD,IAAL,CAAUmD,MAAV,GAAmB7B,IAAI,CAAC6B,MAAxB;AACA,mBAAI,CAACnD,IAAL,CAAUuC,OAAV,GAAoBjB,IAAI,CAACiB,OAAL,CAAarG,IAAjC;AACD,WALD;AAMD;;;iCAEK;AAAA;;AACJ,eAAKyE,MAAL,GAAc,EAAd;AACA,eAAKyB,eAAL,CAAqBH,GAArB,CAAgF,KAAKd,IAArF,EAA2F,KAAKnB,IAAhG,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACuE,eAAL,GAAuBvE,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBAjDU6F,2B,EAA2B,uJ,EAAA,4I,EAAA,uH,EAAA,+H;AAAA,K;;;YAA3BA,2B;AAA2B,0C;AAAA,e;AAAA,a;AAAA,kjB;AAAA;AAAA;AAzDpC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAG;;AACd;;AAAwC;AAAA;AAAA;;AAAxC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAM;;AACjB;;AAAY;AAAA;AAAA;;AACV;;AAAwB;;AAAG;;AAC3B;;AAAyB;;AAAI;;AAC7B;;AAAwB;;AAAG;;AAC3B;;AAA2B;;AAAM;;AACnC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AAAY;AAAA;AAAA;;AACV;;AACF;;AACF;;AAEA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AAtCsB;;AAAA;;AAOJ;;AAAA;;AAYA;;AAAA;;AACE;;AAAA;;AAMN;;AAAA;;;;;;;;;sEAeLA,2B,EAA2B;cA5DvC,uDA4DuC;eA5D7B;AACT3F,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AA4D6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxExC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuEa4F,yB;AAgBX,yCAAoBrB,eAApB,EAAkEnF,MAAlE,EAA0FgC,KAA1F,EAAiH;AAAA;;AAAA;;AAA7F,aAAAmD,eAAA,GAAAA,eAAA;AAA8C,aAAAnF,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAZ1F,aAAAoE,YAAA,GAAiC;AAC/BnH,cAAI,EAAE,EADyB;AAE/BgH,aAAG,EAAE,EAF0B;AAG/BC,gBAAM,EAAE,EAHuB;AAI/BZ,iBAAO,EAAE;AACPrG,gBAAI,EAAE,EADC;AAEPqC,gBAAI,EAAE,EAFC;AAGPiC,uBAAW,EAAE,EAHN;AAIPiC,mBAAO,EAAE;AAJF;AAJsB,SAAjC;AAaE,aAAKxD,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKgB,eAAL,CAAqBf,QAArB,CAAgD,KAAKF,IAArD,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAAC+B,YAAL,GAAoB/B,IAApB;AACD,WAHD;AAID;;;;;;;uBAjCUmC,yB,EAAyB,uJ,EAAA,uH,EAAA,+H;AAAA,K;;;YAAzBA,yB;AAAyB,uC;AAAA,e;AAAA,a;AAAA,iO;AAAA;AAAA;AA/DlC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AAEA;;AACE;;AAAW;;AAAmB;;AAC9B;;AACF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AACF;;AAGF;;AAGF;;AACF;;;;AA5CsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOE;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEAWfA,yB,EAAyB;cAlErC,uDAkEqC;eAlE3B;AACT7F,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AAkE2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA0CU;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcF6F,sB;AACX,sCAAoBrB,UAApB,EAAwDpF,MAAxD,EAAwE;AAAA;;AAApD,aAAAoF,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAExD,aAAA+C,IAAA,GAA4B;AAC1BzB,cAAI,EAAE,EADoB;AAE1BkE,iBAAO,EAAE,EAFiB;AAG1BjC,qBAAW,EAAE;AAHa,SAA5B;AAMA,aAAAE,eAAA,GAAwC;AACtCxE,cAAI,EAAE,EADgC;AAEtCqC,cAAI,EAAE,EAFgC;AAGtCkE,iBAAO,EAAE,EAH6B;AAItCjC,qBAAW,EAAE;AAJyB,SAAxC;AAOA,aAAAG,MAAA,GAAmB,EAAnB;AAf2E;;;;qCAiBjE;AACR,eAAK1D,MAAL,CAAYU,aAAZ;AACD;;;iCAEK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAK0B,UAAL,CAAgBtB,IAAhB,CAAkE,KAAKf,IAAvE,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACkD,eAAL,GAAuBlD,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBAjCUgG,sB,EAAsB,4I,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,sZ;AAAA;AAAA;AAhD/B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AAAyC;AAAA;AAAA;;AAAzC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AAAgD;AAAA;AAAA;;AAAhD;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAA4C;AAAA;AAAA;;AAA5C;;AACF;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AA7BsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAGR;;AAAA;;;;;;;;;sEAeLA,sB,EAAsB;cAnDlC,uDAmDkC;eAnDxB;AACT9F,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AAmDwB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACxDnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAiDU;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAWF8F,sB;AAYX,sCAAoBtB,UAApB,EAAwDpF,MAAxD,EAAgFgC,KAAhF,EAAuG;AAAA;;AAAA;;AAAnF,aAAAoD,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAThF,aAAAsD,OAAA,GAAuB;AACrBrG,cAAI,EAAE,EADe;AAErBqC,cAAI,EAAE,EAFe;AAGrBiC,qBAAW,EAAE,EAHQ;AAIrBiC,iBAAO,EAAE;AAJY,SAAvB;AAOA,aAAA9B,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKiB,UAAL,CAAgBhB,QAAhB,CAAsC,KAAKF,IAA3C,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACiB,OAAL,GAAejB,IAAf;AACD,WAHD;AAID;;;iCAEK;AAAA;;AACJ,eAAKX,MAAL,GAAc,EAAd;AACA,eAAK0B,UAAL,WAA8C,KAAKlB,IAAnD,EACC5D,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAAC+D,eAAL,GAAuB/D,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA1CUiG,sB,EAAsB,4I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,yZ;AAAA;AAAA;AApD/B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAMA;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AACF;;;;AAjCsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAGR;;AAAA;;;;;;;;;sEAYLA,sB,EAAsB;cAvDlC,uDAuDkC;eAvDxB;AACT/F,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AAuDwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA+BY;;AAAuD;;AAAK;;;;;;AAC5D;;AAAqC;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAY;;;;;;AACnE;;AAAqC;;AAA4C;;;;;;AAA5C;;AAAA;;;;;;AAIrC;;AAAuD;;AAAS;;;;;;AAChE;;AAAqC;;AAAwC;;;;;;AAAxC;;AAAA;;;;;;AAIrC;;AAAuC;;AAAQ;;;;;;;;AAIzC;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AACzD;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AAC7D;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;;;;;AALnE;;AACE;;AACE;;AAKF;;AACA;;AAAsD;;AAAU;;AAAS;;AAAW;;AACtF;;;;;;AAD0B;;AAAA;;;;;;AAI5B;;;;;;AACA;;;;;;;;QAQG+F,oB;AACX,oCAAoBvB,UAApB,EAAwDpF,MAAxD,EAAwE;AAAA;;AAApD,aAAAoF,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAUxD,aAAAwE,gBAAA,GAA6B,CAAC,MAAD,EAAS,aAAT,EAAwB,SAAxB,EAAmC,MAAnC,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AAX2E;;;;mCAEnE;AACN,eAAKC,gBAAL;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,eAAKF,UAAL,CAAgBG,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;2CAOe;AAAA;;AACd,eAAKQ,UAAL,CAAgBzB,QAAhB,CAAyB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAzB,EACCrD,SADD,CACW,UAACC,IAAD,EAA0C;AACnD,mBAAI,CAACkE,UAAL,CAAgBlE,IAAhB,GAAuBA,IAAI,CAACsD,OAA5B;AACD,WAHD;AAID;;;6BAEKxE,E,EAAY;AAChB,eAAKW,MAAL,CAAYU,aAAZ,0BAA4CrB,EAA5C;AACD;;;iCACK;AACJ,eAAKW,MAAL,CAAYU,aAAZ;AACD;;;+BACOrB,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,4BAA8CrB,EAA9C;AACD;;;gCACOA,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,4BAA8CrB,EAA9C;AACD;;;;;;;uBAhCUsH,oB,EAAoB,4I,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;0EASpB,8D,EAAS,I;;0EACT,wE,EAAc,I;;;;;;;;;;;;;;;AA9DvB;;AAEE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AAAwC;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAU;;AAAG;;AAAW;;AAExF;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AAEA;;AACF;;AACF;;;;AArCqB;;AAAA;;AA+BI;;AAAA;;AACP;;AAAA;;AAGe;;AAAA;;;;;;;;;sEAKxBA,oB,EAAoB;cAxDhC,uDAwDgC;eAxDtB;AACThG,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AAwDsB,Q;;;;;;;;gBAS9B,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;gBACnB,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AC9E3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA0CU;;AAA4E;;AAAS;;;;;;AAAT;;AAAA;;;;;;AAD9E;;AACE;;AACF;;;;;;AADQ;;AAAA;;;;QAYHgG,sB;AAiBX,sCAAoBxB,UAApB,EAAwDpF,MAAxD,EAAgFgC,KAAhF,EAAuG;AAAA;;AAAA;;AAAnF,aAAAoD,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAdhF,aAAAe,IAAA,GAA4B;AAC1BzB,cAAI,EAAE,EADoB;AAE1BkE,iBAAO,EAAE,EAFiB;AAG1BjC,qBAAW,EAAE;AAHa,SAA5B;AAKA,aAAAuB,eAAA,GAAwC;AACtC7F,cAAI,EAAE,EADgC;AAEtCqC,cAAI,EAAE,EAFgC;AAGtCkE,iBAAO,EAAE,EAH6B;AAItCjC,qBAAW,EAAE;AAJyB,SAAxC;AAOA,aAAAG,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;mCAEM;AACN,eAAKkH,cAAL;AACD;;;qCAES;AACR,eAAKvG,MAAL,CAAYU,aAAZ;AACD;;;yCACa;AAAA;;AACZ,eAAK0E,UAAL,CAAgBhB,QAAhB,CAAsC,KAAKF,IAA3C,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACtB,IAAL,GAAYsB,IAAZ;AACD,WAHD;AAID;;;iCAEK;AAAA;;AACJ,eAAKX,MAAL,GAAc,EAAd;AACA,eAAK0B,UAAL,CAAgBJ,GAAhB,CAAiE,KAAKd,IAAtE,EAA4E,KAAKnB,IAAjF,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACuE,eAAL,GAAuBvE,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBA9CUmG,sB,EAAsB,4I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,uc;AAAA;AAAA;AA9C/B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AAAyC;AAAA;AAAA;;AAAzC;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AAAgD;AAAA;AAAA;;AAAhD;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAA4C;AAAA;AAAA;;AAA5C;;AACF;;AAEA;;AAIA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;AA3BsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAGR;;AAAA;;;;;;;;;sEAaLA,sB,EAAsB;cAjDlC,uDAiDkC;eAjDxB;AACTjG,kBAAQ,EAAE,qBADD;AAETC,kBAAQ;AAFC,S;AAiDwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoDaiG,oB;AAUX,oCAAoBzB,UAApB,EAAwDpF,MAAxD,EAAgFgC,KAAhF,EAAuG;AAAA;;AAAA;;AAAnF,aAAAoD,UAAA,GAAAA,UAAA;AAAoC,aAAApF,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAPhF,aAAAsD,OAAA,GAAuB;AACrBrG,cAAI,EAAE,EADe;AAErBqC,cAAI,EAAE,EAFe;AAGrBiC,qBAAW,EAAE,EAHQ;AAIrBiC,iBAAO,EAAE;AAJY,SAAvB;AAQE,aAAKxD,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAKiB,UAAL,CAAgBhB,QAAhB,CAAsC,KAAKF,IAA3C,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACiB,OAAL,GAAejB,IAAf;AACD,WAHD;AAID;;;;;;;uBA3BUwC,oB,EAAoB,4I,EAAA,uH,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,uN;AAAA;AAAA;AA5C7B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEF;;AACF;;;;AAzBsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;;;;;;;;sEAObA,oB,EAAoB;cA/ChC,uDA+CgC;eA/CtB;AACTlG,kBAAQ,EAAE,kBADD;AAETC,kBAAQ;AAFC,S;AA+CsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA8FY;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AAQJ;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcFkG,mB;AACX,mCAAoBC,OAApB,EAAkD1D,QAAlD,EAAkFrD,MAAlF,EAAkG;AAAA;;AAA9E,aAAA+G,OAAA,GAAAA,OAAA;AAA8B,aAAA1D,QAAA,GAAAA,QAAA;AAAgC,aAAArD,MAAA,GAAAA,MAAA;AAWlF,aAAA+C,IAAA,GAAyB;AACvBiE,mBAAS,EAAE,EADY;AAEvBC,oBAAU,EAAE,EAFW;AAGvBC,kBAAQ,EAAE,EAHa;AAIvBlE,kBAAQ,EAAE,EAJa;AAKvBC,kBAAQ,EAAE,EALa;AAMvBkE,eAAK,EAAE,EANgB;AAOvBC,mBAAS,EAAE,EAPY;AAQvBC,kBAAQ,EAAE,KARa;AASvBC,qBAAW,EAAE,KATU;AAUvBC,gBAAM,EAAE;AAVe,SAAzB;AAaA,aAAA9D,eAAA,GAAqC;AACnCxE,cAAI,EAAE,EAD6B;AAEnC+H,mBAAS,EAAE,EAFwB;AAGnCC,oBAAU,EAAE,EAHuB;AAInCC,kBAAQ,EAAE,EAJyB;AAKnClE,kBAAQ,EAAE,EALyB;AAMnCmE,eAAK,EAAE,EAN4B;AAOnCC,mBAAS,EAAE,EAPwB;AAQnCC,kBAAQ,EAAE,KARyB;AASnCC,qBAAW,EAAE,KATsB;AAUnCC,gBAAM,EAAE;AAV2B,SAArC;AAaA,aAAA7D,MAAA,GAAmB,EAAnB;AArCqG;;;;mCAE7F;AAAA;;AACN,eAAKL,QAAL,CAAcM,QAAd,CAAuB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAvB,EACCrD,SADD,CACW,UAACC,IAAD,EAAwC;AACjD,mBAAI,CAACiH,SAAL,GAAiBjH,IAAI,CAACsD,OAAtB;AACD,WAHD;AAID;;;qCAgCS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;iCAEK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKqD,OAAL,CAAajD,IAAb,CAAyD,KAAKf,IAA9D,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACkD,eAAL,GAAuBlD,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBAvDUqG,mB,EAAmB,sI,EAAA,wI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,wwB;AAAA;AAAA;AAvG5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAS;;AACpB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAU;;AACrB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AAAyC;AAAA;AAAA;;AAAzC;;AACA;;AACA;;AACF;;AAEA;;AAEA;;AAA6B;AAAA;AAAA;;AAAiC;;AAAS;;AAEvE;;AACA;;AAEA;;AAA6B;AAAA;AAAA;;AAAoC;;AAAY;;AAE7E;;AACA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AAA0B;AAAA;AAAA;;AACxB;;AAGF;;AACF;;AAEA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;;;AApFsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA,yFAAwB,SAAxB,EAAwB,kBAAxB;;AACiB;;AAAA;;AAMN;;AAAA;;AAKA;;AAAA;;AASD;;AAAA;;AACP;;AAAA;;AAQX;;AAAA;;;;;;;;;sEAeLA,mB,EAAmB;cA1G/B,uDA0G+B;eA1GrB;AACTnG,kBAAQ,EAAE,iBADD;AAETC,kBAAQ;AAFC,S;AA0GqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA6FU;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMJ;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAWA6G,mB;AAkBX,mCAAoBV,OAApB,EAAkD/G,MAAlD,EAA0EgC,KAA1E,EAAiG;AAAA;;AAAA;;AAA7E,aAAA+E,OAAA,GAAAA,OAAA;AAA8B,aAAA/G,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAf1E,aAAA0F,IAAA,GAAiB;AACfzI,cAAI,EAAE,EADS;AAEf+H,mBAAS,EAAE,EAFI;AAGfC,oBAAU,EAAE,EAHG;AAIfC,kBAAQ,EAAE,EAJK;AAKflE,kBAAQ,EAAE,EALK;AAMfmE,eAAK,EAAE,EANQ;AAOfC,mBAAS,EAAE,EAPI;AAQfC,kBAAQ,EAAE,KARK;AASfC,qBAAW,EAAE,KATE;AAUfC,gBAAM,EAAE;AAVO,SAAjB;AAaA,aAAA7D,MAAA,GAAmB,EAAnB;AAGE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAK4C,OAAL,CAAa3C,QAAb,CAAgC,KAAKF,IAArC,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACqD,IAAL,GAAYrD,IAAZ;AACD,WAHD;AAID;;;iCAEK;AAAA;;AACJ,eAAKX,MAAL,GAAc,EAAd;AACA,eAAKqD,OAAL,WAAwC,KAAK7C,IAA7C,EACC5D,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAAC+D,eAAL,GAAuB/D,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBAhDUgH,mB,EAAmB,sI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,wa;AAAA;AAAA;AApG9B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAU;;AACrB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;AAEA;;AAMA;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AACF;;;;AAjFsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAUG;;AAAA;;AAMX;;AAAA;;;;;;;;;sEAYHA,mB,EAAmB;cAvG/B,uDAuG+B;eAvGrB;AACT9G,kBAAQ,EAAE,iBADD;AAETC,kBAAQ;AAFC,S;AAuGqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA6BY;;AAAuD;;AAAU;;;;;;AACjE;;AAAqC;;AAA0C;;;;;;AAA1C;;AAAA;;;;;;AAIrC;;AAAuD;;AAAW;;;;;;AAClE;;AAAqC;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AAIrC;;AAAuD;;AAAS;;;;;;AAChE;;AAAqC;;AAAyC;;;;;;AAAzC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAS;;;;;;AAChE;;AAAqC;;AAAyC;;;;;;AAAzC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAM;;;;;;AAC7D;;AAAqC;;AAAsC;;;;;;AAAtC;;AAAA;;;;;;AAIrC;;AAAuD;;AAAU;;;;;;AACjE;;AAAqC;;AAA0C;;;;;;AAA1C;;AAAA;;;;;;AAIrC;;AAAuD;;AAAS;;;;;;AAChE;;AAAqC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIrC;;AAAuD;;AAAY;;;;;;AACnE;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAAuC;;AAAQ;;;;;;;;AAIzC;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AACzD;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AAC7D;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;;;;;AALnE;;AACE;;AACE;;AAKF;;AACA;;AAAsD;;AAAU;;AAAS;;AAAW;;AACtF;;;;;;AAD0B;;AAAA;;;;;;AAI5B;;;;;;AACA;;;;;;;;QAQG+G,iB;AACX,iCAAoBZ,OAApB,EAAkD/G,MAAlD,EAAkE;AAAA;;AAA9C,aAAA+G,OAAA,GAAAA,OAAA;AAA8B,aAAA/G,MAAA,GAAAA,MAAA;AAIlD,aAAAwE,gBAAA,GAA6B,CAAC,WAAD,EACC,YADD,EAEC,UAFD,EAGC,UAHD,EAIC,OAJD,EAKC,WALD,EAMC,UAND,EAOC,aAPD,EAQC,MARD,CAA7B;AASA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AAbqE;;;;mCAe7D;AACN,eAAKC,gBAAL;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,eAAKF,UAAL,CAAgBG,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;2CAEe;AAAA;;AACd,eAAKmC,OAAL,CAAapD,QAAb,CAAsB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAtB,EACCrD,SADD,CACW,UAACC,IAAD,EAAuC;AAChD,mBAAI,CAACkE,UAAL,CAAgBlE,IAAhB,GAAuBA,IAAI,CAACsD,OAA5B;AACD,WAHD;AAID;;;6BAEKxE,E,EAAY;AAChB,eAAKW,MAAL,CAAYU,aAAZ,uBAAyCrB,EAAzC;AACD;;;iCACK;AACJ,eAAKW,MAAL,CAAYU,aAAZ;AACD;;;+BACOrB,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,yBAA2CrB,EAA3C;AACD;;;gCACOA,E,EAAY;AAClB,eAAKW,MAAL,CAAYU,aAAZ,yBAA2CrB,EAA3C;AACD;;;;;;;uBAxCUsI,iB,EAAiB,sI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;0EAGjB,8D,EAAS,I;;0EACT,wE,EAAc,I;;;;;;;;;;;;;;;AAhFvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AAAwC;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAU;;AAAG;;AAAW;;AAExF;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AAEA;;AACF;;AACF;;;;AA9DqB;;AAAA;;AAwDI;;AAAA;;AACP;;AAAA;;AAGC;;AAAA;;;;;;;;;sEAKVA,iB,EAAiB;cA/E7B,uDA+E6B;eA/EnB;AACThH,kBAAQ,EAAE,eADD;AAETC,kBAAQ;AAFC,S;AA+EmB,Q;;;;;;;;gBAG3B,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;gBACnB,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AC/F3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAyFQ;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AAQJ;;AACE;;AAA+C;;AAAS;;AAC1D;;;;;;AADiD;;AAAA;;;;;;AAFnD;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QAcEgH,mB;AACX,mCAAoBb,OAApB,EAAkD1D,QAAlD,EAAkFrD,MAAlF,EAA0GgC,KAA1G,EAAiI;AAAA;;AAAA;;AAA7G,aAAA+E,OAAA,GAAAA,OAAA;AAA8B,aAAA1D,QAAA,GAAAA,QAAA;AAAgC,aAAArD,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAwB1G,aAAAkC,IAAA,GAAe,EAAf;AAGA,aAAAnB,IAAA,GAAyB;AACvBiE,mBAAS,EAAE,EADY;AAEvBC,oBAAU,EAAE,EAFW;AAGvBC,kBAAQ,EAAE,EAHa;AAIvBlE,kBAAQ,EAAE,EAJa;AAKvBmE,eAAK,EAAE,EALgB;AAMvBC,mBAAS,EAAE,EANY;AAOvBC,kBAAQ,EAAE,KAPa;AAQvBC,qBAAW,EAAE,KARU;AASvBC,gBAAM,EAAE;AATe,SAAzB;AAYA,aAAAzC,eAAA,GAAqC;AACnC7F,cAAI,EAAE,EAD6B;AAEnC+H,mBAAS,EAAE,EAFwB;AAGnCC,oBAAU,EAAE,EAHuB;AAInCC,kBAAQ,EAAE,EAJyB;AAKnClE,kBAAQ,EAAE,EALyB;AAMnCmE,eAAK,EAAE,EAN4B;AAOnCC,mBAAS,EAAE,EAPwB;AAQnCC,kBAAQ,EAAE,KARyB;AASnCC,qBAAW,EAAE,KATsB;AAUnCC,gBAAM,EAAE;AAV2B,SAArC;AAaA,aAAA7D,MAAA,GAAmB,EAAnB;AAnDE,aAAK1B,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;mCAEM;AAAA;;AACN,eAAK0H,OAAL,CAAa3C,QAAb,CAAgC,KAAKF,IAArC,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACtB,IAAL,CAAUiE,SAAV,GAAsB3C,IAAI,CAAC2C,SAA3B;AACA,mBAAI,CAACjE,IAAL,CAAUkE,UAAV,GAAuB5C,IAAI,CAAC4C,UAA5B;AACA,mBAAI,CAAClE,IAAL,CAAUmE,QAAV,GAAqB7C,IAAI,CAAC6C,QAA1B;AACA,mBAAI,CAACnE,IAAL,CAAUC,QAAV,GAAqBqB,IAAI,CAACrB,QAA1B;AACA,mBAAI,CAACD,IAAL,CAAUoE,KAAV,GAAkB9C,IAAI,CAAC8C,KAAvB;AACA,mBAAI,CAACpE,IAAL,CAAUqE,SAAV,GAAsB/C,IAAI,CAAC+C,SAA3B;AACA,mBAAI,CAACrE,IAAL,CAAUsE,QAAV,GAAqBhD,IAAI,CAACgD,QAA1B;AACA,mBAAI,CAACtE,IAAL,CAAUuE,WAAV,GAAwBjD,IAAI,CAACiD,WAA7B;AACA,mBAAI,CAACvE,IAAL,CAAUwE,MAAV,GAAmBlD,IAAI,CAACkD,MAAL,CAAYjF,GAAZ,CAAgB,UAAAyC,CAAC;AAAA,qBAAIA,CAAC,CAAC9F,IAAN;AAAA,aAAjB,CAAnB;AACD,WAXD;AAaA,eAAKoE,QAAL,CAAcM,QAAd,CAAuB,IAAI,sEAAJ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,CAAvB,EACCrD,SADD,CACW,UAACC,IAAD,EAAwC;AACjD,mBAAI,CAACiH,SAAL,GAAiBjH,IAAI,CAACsD,OAAtB;AACD,WAHD;AAID;;;qCAgCS;AACR,eAAK7D,MAAL,CAAYU,aAAZ;AACD;;;iCACK;AAAA;;AACJ,eAAKgD,MAAL,GAAc,EAAd;AACA,eAAKqD,OAAL,CAAa/B,GAAb,CAAwD,KAAKd,IAA7D,EAAmE,KAAKnB,IAAxE,EACCzC,SADD,CAEA,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACuE,eAAL,GAAuBvE,IAAvB;;AACA,mBAAI,CAACP,MAAL,CAAYU,aAAZ;AACD,WALD,EAMA,kBAAa;AAAA,gBAAXD,KAAW,UAAXA,KAAW;AACX,mBAAI,CAACiD,MAAL,GAAcjD,KAAd;AACD,WARD;AASD;;;;;;;uBArEUmH,mB,EAAmB,sI,EAAA,wI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,msB;AAAA;AAAA;AAhG9B;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAS;;AACpB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAU;;AACrB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AAAgB;AAAA;AAAA;;AAAhB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AAAyC;AAAA;AAAA;;AAAzC;;AACA;;AACA;;AACF;;AAEA;;AAEA;;AAA6B;AAAA;AAAA;;AAAiC;;AAAS;;AAEvE;;AACA;;AAEA;;AAA6B;AAAA;AAAA;;AAAoC;;AAAY;;AAE7E;;AACA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AAA0B;AAAA;AAAA;;AACxB;;AAGF;;AACF;;AAEA;;AAEA;;AAMA;;AAAI;;AAEJ;;AAA2C;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;AAE3E;;AAEF;;;;;;AA7EsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA,yFAAwB,SAAxB,EAAwB,kBAAxB;;AACiB;;AAAA;;AAMN;;AAAA;;AAKA;;AAAA;;AASD;;AAAA;;AACP;;AAAA;;AAQX;;AAAA;;;;;;;;;sEAeDA,mB,EAAmB;cAnG/B,uDAmG+B;eAnGrB;AACTjH,kBAAQ,EAAE,iBADD;AAETC,kBAAQ;AAFC,S;AAmGqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChHhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AA0FY;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QASDiH,iB;AAgBX,iCAAoBd,OAApB,EAAkD/G,MAAlD,EAA0EgC,KAA1E,EAAiG;AAAA;;AAAA;;AAA7E,aAAA+E,OAAA,GAAAA,OAAA;AAA8B,aAAA/G,MAAA,GAAAA,MAAA;AAAwB,aAAAgC,KAAA,GAAAA,KAAA;AAb1E,aAAA0F,IAAA,GAAiB;AACfzI,cAAI,EAAE,EADS;AAEf+H,mBAAS,EAAE,EAFI;AAGfC,oBAAU,EAAE,EAHG;AAIfC,kBAAQ,EAAE,EAJK;AAKflE,kBAAQ,EAAE,EALK;AAMfmE,eAAK,EAAE,EANQ;AAOfC,mBAAS,EAAE,EAPI;AAQfC,kBAAQ,EAAE,KARK;AASfC,qBAAW,EAAE,KATE;AAUfC,gBAAM,EAAE;AAVO,SAAjB;AAcE,aAAKvF,KAAL,CAAWiC,MAAX,CAAkB3D,SAAlB,CAA4B;AAAA,cAAEjB,EAAF,UAAEA,EAAF;AAAA,iBAAU,OAAI,CAAC6E,IAAL,GAAY7E,EAAtB;AAAA,SAA5B;AACA;;;;qCAES;AACT,eAAKW,MAAL,CAAYU,aAAZ;AACA;;;mCAEM;AACN,eAAKyD,aAAL;AACD;;;wCAEY;AAAA;;AACX,eAAK4C,OAAL,CAAa3C,QAAb,CAAgC,KAAKF,IAArC,EACC5D,SADD,CACW,UAAA+D,IAAI,EAAI;AACjB,mBAAI,CAACqD,IAAL,GAAYrD,IAAZ;AACD,WAHD;AAID;;;;;;;uBAjCUwD,iB,EAAiB,sI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,c;AAAA,wR;AAAA;AAAA;AA5F1B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AAEE;;AAAwC;AAAA,mBAAS,gBAAT;AAA0B,WAA1B;;AAA4B;;AAAU;;AAAU;;AAAW;;AAEnG;;AAAI;;AAEJ;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAU;;AACrB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AAEA;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;AAEF;;AACF;;;;AAzEsB;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAUG;;AAAA;;;;;;;;;sEAUhBA,iB,EAAiB;cA/F7B,uDA+F6B;eA/FnB;AACTlH,kBAAQ,EAAE,eADD;AAETC,kBAAQ;AAFC,S;AA+FmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACpG9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMkH,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBC,cAAQ,EAAE;AAFe,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;ACZAC,UAAM,CAACC,SAAP,CAAiBC,kBAAjB,GAAsC,UAAUC,YAAV,EAAgC;AACpE,UAAI,QAAQ,KAAKC,MAAL,GAAcD,YAA1B,EAAwC;AACtC,yBAAU,KAAKE,MAAL,CAAY,CAAZ,EAAeF,YAAf,CAAV;AACD;;AACD,aAAO,IAAP;AACD,KALD;;;;;;;;;;;;;;;;;ACJA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,aAASG,QAAT,GAAiB;AACpB,aAAO,EAAG,OAAOC,MAAP,IAAiB,WAAjB,IAAgCA,MAAM,CAAC7G,QAA1C,CAAP;AACH;;AACM,aAAS8G,QAAT,GAAiB;AACpB,aAAQ,OAAOD,MAAP,IAAiB,WAAjB,IAAgCA,MAAM,CAAC7G,QAA/C;AACH;;;;;;;;;;;;;;;;;ACLD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYoG,UAAhB,EAA4B;AAC1B;AACD;;AAEDpG,YAAQ,CAAC+G,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,kFAAyBC,eAAzB,CAAyC,yDAAzC,WACO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACpI,KAAR,CAAcmI,GAAd,CAAJ;AAAA,OADV;AAED,KAHD;;;;;;;;;;;;;;;;ACVA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,W;;;;;AACX,2BAAYC,IAAZ,EAA8B;AAAA;;AAAA;;AAC5B,oCAAMA,IAAN,EAAY,YAAZ;AAGD,gBAAA5I,eAAA,GAA2B,KAA3B;AAJ6B;AAE5B;;;;8BAKM4C,I,EAAoB;AAC1B,iBAAO,KAAKe,IAAL,CAAuCf,IAAvC,EAA6C,OAA7C,CAAP;AACA;;;2CAEe;AACf,iBAAO,KAAKqB,QAAL,CAA2B,cAA3B,CAAP;AACA;;;;MAd6B,yD;;;uBAApB0E,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaE,Y;;;;;AACX,4BAAYD,IAAZ,EAA8B;AAAA;;AAAA,kCACtBA,IADsB,EAChB,oBADgB;AAE5B;;;MAH8B,yD;;;uBAArBC,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;;;;;;;;;;;;;;;;;ACLzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,iB;;;;;AACX,iCAAYF,IAAZ,EAA8B;AAAA;;AAAA,kCACtBA,IADsB,EAChB,yBADgB;AAE5B;;;MAHmC,yD;;;uBAA1BE,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB;;;;;sEAAjBA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,mB;;;;;AACX,mCAAYH,IAAZ,EAA8B;AAAA;;AAAA,kCACtBA,IADsB,EAChB,2BADgB;AAE5B;;;MAHqC,yD;;;uBAA5BG,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,c;;;;;AACX,8BAAYJ,IAAZ,EAA8B;AAAA;;AAAA,kCACtBA,IADsB,EAChB,sBADgB;AAE5B;;;MAHgC,yD;;;uBAAvBI,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,W;;;;;AACX,2BAAYL,IAAZ,EAA8B;AAAA;;AAAA,kCACtBA,IADsB,EAChB,mBADgB;AAE5B;;;MAH6B,yD;;;uBAApBK,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;ACLxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,e,GACX,yBAAoBC,UAApB,EACoBC,QADpB,EAEoBC,MAFpB,EAGoBC,SAHpB,EAGuC;AAAA;;AAHnB,WAAAH,UAAA,GAAAA,UAAA;AACA,WAAAC,QAAA,GAAAA,QAAA;AACA,WAAAC,MAAA,GAAAA,MAAA;AACA,WAAAC,SAAA,GAAAA,SAAA;AACnB,K;;QAGUC,c;AACX,8BAAoBX,IAApB,EAA8CvD,OAA9C,EAA+D;AAAA;;AAA3C,aAAAuD,IAAA,GAAAA,IAAA;AAA0B,aAAAvD,OAAA,GAAAA,OAAA,CAAiB,CAE7D;;AACA,aAAKmE,OAAL,GAAe,yEAAY3B,QAA3B;AAEA,aAAK/B,GAAL,aAAc,KAAK0D,OAAnB,SAA6BnE,OAA7B;;AAEA,YAAI,4EAAJ,EAAgB;AACd,cAAItD,YAAY,GAAIC,MAAc,CAACC,WAAf,CAA2BT,QAAQ,CAACC,MAAT,CAAgBS,KAAhB,CAAsB,KAAtB,EAA6BC,GAA7B,CAAiC,UAAAC,CAAC,EAAI;AAAA,4BAC3DA,CAAC,CAACF,KAAF,CAAQ,GAAR,CAD2D;AAAA;AAAA,gBACzEG,GADyE;AAAA,gBACjEC,CADiE;;AAEjF,mBAAO,CAAED,GAAF,EAAOE,kBAAkB,CAACD,CAAC,CAACE,IAAF,CAAO,GAAP,CAAD,CAAzB,CAAP;AACH,WAH8C,CAA3B,CAApB;AAKA,eAAKC,KAAL,GAAaV,YAAY,CAACW,YAA1B;AACD;AACF;;;;iCAMkB+G,U,EAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAO,KAAKb,IAAL,CAAUc,GAAV,CAA0C,KAAK5D,GAA/C,EAAoD;AACzDhC,kBAAM,EAAE,IAAI,+DAAJ,GAAiB6F,GAAjB,CAAqB,QAArB,EAA+BF,UAAU,CAACJ,MAAX,GAAoBI,UAAU,CAACJ,MAA/B,GAAwC,EAAvE,EACiBM,GADjB,CACqB,WADrB,EACkCF,UAAU,CAACH,SAAX,GAAuBG,UAAU,CAACH,SAAlC,GAA8C,EADhF,EAEiBK,GAFjB,CAEqB,YAFrB,EAEmCF,UAAU,CAACN,UAAX,GAAwBM,UAAU,CAACN,UAAX,CAAsBS,QAAtB,EAAxB,GAA2D,EAF9F,EAGiBD,GAHjB,CAGqB,UAHrB,EAGiCF,UAAU,CAACL,QAAX,GAAsBK,UAAU,CAACL,QAAX,CAAoBQ,QAApB,EAAtB,GAAuD,EAHxF,CADiD;AAKzDC,mBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,eAAtB,mBAAiD,KAAKlH,KAAtD;AALgD,WAApD,CAAP;AAOD;;;iCACkBsB,I,EAAc;AAC/B,iBAAO,KAAK6E,IAAL,CAAUc,GAAV,WAA0B,KAAK5D,GAA/B,SAAqC/B,IAArC,GAA6C;AAAE8F,mBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,eAAtB,mBAAiD,KAAKlH,KAAtD;AAAX,WAA7C,CAAP;AACD;;;6BACuBqH,I,EAAgB/F,I,EAAe;AACrD,iBAAO,KAAK6E,IAAL,CAAUjF,IAAV,WAA2B,KAAKmC,GAAhC,SAAsC/B,IAAI,GAAGA,IAAH,GAAU,EAApD,GAA0D+F,IAA1D,EAAgE;AAAED,mBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,eAAtB,mBAAiD,KAAKlH,KAAtD;AAAX,WAAhE,CAAP;AACD;;;4BACsBsB,I,EAAc+F,I,EAAgB;AACnD,iBAAO,KAAKlB,IAAL,CAAU/D,GAAV,WAA0B,KAAKiB,GAA/B,SAAqC/B,IAArC,GAA6C+F,IAA7C,EAAmD;AAAED,mBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,eAAtB,mBAAiD,KAAKlH,KAAtD;AAAX,WAAnD,CAAP;AACD;;;8BACwBsB,I,EAAc+F,I,EAAgB;AACrD,iBAAO,KAAKlB,IAAL,CAAUmB,KAAV,WAA4B,KAAKjE,GAAjC,SAAuC/B,IAAvC,GAA+C+F,IAA/C,EAAqD;AAAED,mBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,eAAtB,mBAAiD,KAAKlH,KAAtD;AAAX,WAArD,CAAP;AACD;;;gCACgBsB,I,EAAc;AAC7B,iBAAO,KAAK6E,IAAL,qBAA6B,KAAK9C,GAAlC,SAAwC/B,IAAxC,GAAgD;AAAE8F,mBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,eAAtB,mBAAiD,KAAKlH,KAAtD;AAAX,WAAhD,CAAP;AACD","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from '../../src/app/auth/can.activate'\r\n\r\nimport { LoginComponent } from './auth/login.component';\r\n\r\nimport { ServiceListComponent } from './service/service-list.component';\r\nimport { ServiceViewComponent } from './service/service-view.component';\r\nimport { ServiceCreateComponent } from './service/service-create.component';\r\nimport { ServiceUpdateComponent } from './service/service-update.component';\r\nimport { ServiceDeleteComponent } from './service/service-delete.component';\r\n\r\nimport { ServiceRouteListComponent } from './service-route/service-route-list.component';\r\nimport { ServiceRouteViewComponent } from './service-route/service-route-view.component';\r\nimport { ServiceRouteCreateComponent } from './service-route/service-route-create.component';\r\nimport { ServiceRouteUpdateComponent } from './service-route/service-route-update.component';\r\nimport { ServiceRouteDeleteComponent } from './service-route/service-route-delete.component';\r\n\r\nimport { PermissionListComponent } from './permission/permission-list.component';\r\nimport { PermissionViewComponent } from './permission/permission-view.component';\r\nimport { PermissionCreateComponent } from './permission/permission-create.component';\r\nimport { PermissionUpdateComponent } from './permission/permission-update.component';\r\nimport { PermissionDeleteComponent } from './permission/permission-delete.component';\r\n\r\nimport { GroupListComponent } from './group/group-list.component';\r\nimport { GroupViewComponent } from './group/group-view.component';\r\nimport { GroupCreateComponent } from './group/group-create.component';\r\nimport { GroupUpdateComponent } from './group/group-update.component';\r\nimport { GroupDeleteComponent } from './group/group-delete.component';\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserViewComponent } from './user/user-view.component';\r\nimport { UserCreateComponent } from './user/user-create.component';\r\nimport { UserUpdateComponent } from './user/user-update.component';\r\nimport { UserDeleteComponent } from './user/user-delete.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'login', component: LoginComponent },\r\n\r\n  { path: 'services', component: ServiceListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/view/:id', component: ServiceViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/create', component: ServiceCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/update/:id', component: ServiceUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/delete/:id', component: ServiceDeleteComponent, canActivate: [ AuthGuardService ] },\r\n\r\n  { path: 'service-routes', component: ServiceRouteListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/view/:id', component: ServiceRouteViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/create', component: ServiceRouteCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/update/:id', component: ServiceRouteUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/delete/:id', component: ServiceRouteDeleteComponent, canActivate: [ AuthGuardService ] },\r\n\r\n  { path: 'permissions', component: PermissionListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/view/:id', component: PermissionViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/create', component: PermissionCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/update/:id', component: PermissionUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/delete/:id', component: PermissionDeleteComponent, canActivate: [ AuthGuardService ] },\r\n\r\n  { path: 'groups', component: GroupListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/view/:id', component: GroupViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/create', component: GroupCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/update/:id', component: GroupUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/delete/:id', component: GroupDeleteComponent, canActivate: [ AuthGuardService ] },  \r\n\r\n  { path: 'users', component: UserListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/view/:id', component: UserViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/create', component: UserCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/update/:id', component: UserUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/delete/:id', component: UserDeleteComponent, canActivate: [ AuthGuardService ] },  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule  { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { IsServer } from 'src/helpers/processHelper';\r\n\r\n// modes: side, push, over\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n\r\n    <div *ngIf=\"isLoaded\">\r\n\r\n      <div *ngIf=\"isAuthenticated; then thenBlock else elseBlock\"></div>\r\n\r\n      <ng-template #thenBlock>\r\n        <app-topbar (onToggleSideBar)=\"this.onToggleSideBar()\"></app-topbar>\r\n        <app-sidebar [toggleState]=[toggleState]>\r\n          <router-outlet></router-outlet>\r\n        </app-sidebar>\r\n      </ng-template>\r\n\r\n      <ng-template #elseBlock>\r\n        <app-login></app-login>\r\n      </ng-template>\r\n\r\n    </div>\r\n\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private svcAuth: AuthService, private router: Router) { }\r\n\r\n  title = 'CORE-angular10'\r\n  toggleState:boolean = false\r\n  isAuthenticated = false\r\n  isLoaded = false\r\n\r\n  ngOnInit () {\r\n    if (IsServer()) {\r\n      return\r\n    }\r\n\r\n    this.svcAuth.FetchCurrentUser()\r\n    .subscribe(\r\n      data => {\r\n        this.toggleState = true\r\n\r\n        this.svcAuth.isAuthenticated = true\r\n        this.isAuthenticated = this.svcAuth.isAuthenticated\r\n        this.svcAuth.currentUser = data\r\n      },\r\n      ({error}) => {\r\n        this.svcAuth.isAuthenticated = false\r\n        this.isAuthenticated = this.svcAuth.isAuthenticated\r\n        this.router.navigateByUrl(`/login`)\r\n      })\r\n\r\n      this.isLoaded = true\r\n  }\r\n\r\n  onToggleSideBar () {\r\n    this.toggleState = !this.toggleState\r\n  }\r\n}\r\n","// Custom Extension Methods\r\nimport 'src/extension-methods/stringExtensions'\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\n//Angular Material Components\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\n\r\n\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppSideBarComponent } from './app.sidebar.component';\r\nimport { AppTopBarComponent } from './app.topbar.component';\r\n\r\n\r\nimport { LoginComponent } from './auth/login.component';\r\n\r\n\r\nimport { ServiceListComponent } from './service/service-list.component';\r\nimport { ServiceViewComponent } from './service/service-view.component';\r\nimport { ServiceCreateComponent } from './service/service-create.component';\r\nimport { ServiceUpdateComponent } from './service/service-update.component';\r\nimport { ServiceDeleteComponent } from './service/service-delete.component';\r\n\r\n\r\nimport { ServiceRouteListComponent } from './service-route/service-route-list.component';\r\nimport { ServiceRouteViewComponent } from './service-route/service-route-view.component';\r\nimport { ServiceRouteCreateComponent } from './service-route/service-route-create.component';\r\nimport { ServiceRouteUpdateComponent } from './service-route/service-route-update.component';\r\nimport { ServiceRouteDeleteComponent } from './service-route/service-route-delete.component';\r\n\r\n\r\nimport { PermissionListComponent } from './permission/permission-list.component';\r\nimport { PermissionViewComponent } from './permission/permission-view.component';\r\nimport { PermissionCreateComponent } from './permission/permission-create.component';\r\nimport { PermissionUpdateComponent } from './permission/permission-update.component';\r\nimport { PermissionDeleteComponent } from './permission/permission-delete.component';\r\n\r\n\r\nimport { GroupListComponent } from './group/group-list.component';\r\nimport { GroupViewComponent } from './group/group-view.component';\r\nimport { GroupCreateComponent } from './group/group-create.component';\r\nimport { GroupUpdateComponent } from './group/group-update.component';\r\nimport { GroupDeleteComponent } from './group/group-delete.component';\r\n\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserViewComponent } from './user/user-view.component';\r\nimport { UserCreateComponent } from './user/user-create.component';\r\nimport { UserUpdateComponent } from './user/user-update.component';\r\nimport { UserDeleteComponent } from './user/user-delete.component';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { AuthGuardService } from './auth/can.activate';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,AppSideBarComponent,AppTopBarComponent,\r\n\r\n    LoginComponent,\r\n\r\n    ServiceListComponent,\r\n    ServiceViewComponent,\r\n    ServiceCreateComponent,\r\n    ServiceUpdateComponent,\r\n    ServiceDeleteComponent,\r\n\r\n    ServiceRouteListComponent,\r\n    ServiceRouteViewComponent,\r\n    ServiceRouteCreateComponent,\r\n    ServiceRouteUpdateComponent,\r\n    ServiceRouteDeleteComponent,\r\n\r\n    PermissionListComponent,\r\n    PermissionViewComponent,\r\n    PermissionCreateComponent,\r\n    PermissionUpdateComponent,\r\n    PermissionDeleteComponent,\r\n\r\n    GroupListComponent,\r\n    GroupViewComponent,\r\n    GroupCreateComponent,\r\n    GroupUpdateComponent,\r\n    GroupDeleteComponent,\r\n\r\n    UserListComponent,\r\n    UserViewComponent,\r\n    UserCreateComponent,\r\n    UserUpdateComponent,\r\n    UserDeleteComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [\r\n    AuthGuardService,\r\n    \r\n    AuthService,\r\n    ServiceService,\r\n    ServiceRouteService,\r\n    PermissionService,\r\n    GroupService,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\n// modes: side, push, over\r\ninterface Module {\r\n  name: string;\r\n  urlPath: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `\r\n    <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"false\">\r\n      <mat-drawer [opened]=\"toggleState\" [mode]=\"'side'\">\r\n\r\n        <mat-selection-list [multiple]=\"false\" dense>\r\n          <mat-list-option *ngFor=\"let module of modules\" [routerLink]=\"module.urlPath\" routerLinkActive=\"active\">\r\n            {{module.name}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n\r\n      </mat-drawer>\r\n      <mat-drawer-content style=\"min-height:100vh\">\r\n        <ng-content></ng-content>\r\n      </mat-drawer-content>\r\n    </mat-drawer-container>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppSideBarComponent {\r\n  title = 'CORE-angular10';\r\n  modules:Module[] = [\r\n    { name: \"Services\", urlPath: \"/services\"},\r\n    { name: \"ServiceRoutes\", urlPath: \"/service-routes\"},\r\n    // { name: \"Modules\", urlPath: \"/modules\"},\r\n    { name: \"Groups\", urlPath: \"/groups\"},\r\n    { name: \"Permissions\", urlPath: \"/permissions\"},\r\n    { name: \"Users\", urlPath: \"/users\"},\r\n  ]\r\n\r\n  @Input() toggleState: boolean;\r\n}\r\n","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { CurrentUser } from 'src/interfaces/auth.interface';\r\n\r\n// modes: side, push, over\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  template: `\r\n    <mat-toolbar color=\"primary\" style=\"height:56px;display:flex;\">\r\n      <button mat-icon-button (click)=\"this.onToggle()\"><mat-icon>menu</mat-icon></button>\r\n      <button mat-button routerLink=\"/\" routerLinkActive=\"active\">CORE Admin</button>\r\n\r\n      <mat-menu #matMenu=\"matMenu\">\r\n        <ng-template matMenuContent>\r\n          <button mat-menu-item (click)=\"this.viewProfile()\">Profile</button>\r\n          <button mat-menu-item (click)=\"this.setSettings()\">Settings</button>\r\n          <button mat-menu-item (click)=\"this.logoutUser()\">Logout</button>\r\n        </ng-template>\r\n      </mat-menu>\r\n      <button mat-button [matMenuTriggerFor]=\"matMenu\" style=\"margin-left:auto;\">{{currentUser.firstname}} {{currentUser.lastname}}<mat-icon>more_vert</mat-icon></button>\r\n    </mat-toolbar>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppTopBarComponent {\r\n  constructor (private svcAuth: AuthService,) {\r\n    this.currentUser = svcAuth.currentUser\r\n  }\r\n\r\n  title = 'CORE-angular10';\r\n  currentUser: CurrentUser\r\n  \r\n  @Output() onToggleSideBar = new EventEmitter<boolean>();\r\n\r\n  onToggle () {\r\n    this.onToggleSideBar.emit();\r\n  }\r\n\r\n  viewProfile (): void {}\r\n  setSettings (): void {}\r\n  logoutUser (): void {\r\n    document.cookie = `access_token=`\r\n    document.location.reload()\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { IsServer } from 'src/helpers/processHelper';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate  {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    if (IsServer()) {\r\n      return true\r\n    }\r\n\r\n    let cookieObject = (Object as any).fromEntries(document.cookie.split(/; */).map(c => {\r\n        const [ key, ...v ] = c.split('=');\r\n        return [ key, decodeURIComponent(v.join('=')) ];\r\n    }));\r\n\r\n    let token = cookieObject.access_token\r\n\r\n    if (!token) {\r\n      this.router.navigateByUrl(`/login`)\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { LoginRequest, LoginResponse } from '../../interfaces/auth.interface'\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div style=\"display:flex;height:100vh;width:100vw;\">\r\n      <mat-card style=\"margin:auto;width:300px\">\r\n        <mat-card-title>\r\n          Login\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n        </mat-card-subtitle>\r\n\r\n        <mat-card-content style=\"display:flex-root\">\r\n\r\n          <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n            <mat-label>Username</mat-label>\r\n            <input matInput [value]=\"this.form.username\" (input)=\"this.form.username = $event.target.value\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n            <mat-label>Password</mat-label>\r\n            <input matInput [(ngModel)]=\"this.form.password\" type=\"password\">\r\n          </mat-form-field>\r\n\r\n          <br><br>\r\n\r\n          <button mat-stroked-button color=\"primary\" (click)=\"this.onSubmitLogin()\">Login</button>\r\n\r\n        </mat-card-content>\r\n\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginComponent {\r\n\r\n  constructor(private svcAuth: AuthService, private router: Router) { }\r\n\r\n  form: LoginRequest = {\r\n    username: \"admin\",\r\n    password: \"p@ssw0rd\"\r\n  }\r\n\r\n  loginResponse: LoginResponse = {\r\n    token: \"\"\r\n  }\r\n\r\n  error = \"\"\r\n\r\n  onSubmitLogin(): void {\r\n    this.svcAuth.Login(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.loginResponse = data\r\n\r\n      document.cookie = `access_token=`\r\n      document.cookie = `access_token=${data.token}`\r\n      this.router.navigateByUrl(`/`)\r\n      .then(() => {\r\n        document.location.reload()\r\n      })\r\n    },\r\n    ({error}) => {\r\n      this.error = error\r\n      this.svcAuth.isAuthenticated = false\r\n      document.cookie = `access_token=`\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { GroupCreateRequest,\r\n         GroupCreateResponse,\r\n         GroupPermissionCreateResponse } from 'src/interfaces/group.interface';\r\nimport { Router } from '@angular/router';\r\nimport { PermissionList } from 'src/interfaces/permission.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\n\r\n@Component({\r\n  selector: 'app-group-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.permissions\">\r\n            <mat-list-option *ngFor=\"let permission of permissionList\" [value]=\"permission.code\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupCreateComponent implements OnInit {\r\n  constructor(private svcGroup: GroupService, private svcPermission: PermissionService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcPermission.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<PermissionList>) => {\r\n      this.permissionList = data.results\r\n    })\r\n  }\r\n\r\n  permissionList: PermissionList[]\r\n\r\n  form:GroupCreateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as string[]\r\n  }\r\n\r\n  createdResponse:GroupCreateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionCreateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcGroup.post<GroupCreateResponse, GroupCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/groups`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupRead,\r\n         GroupPermissionRead,\r\n         GroupDeleteResponse } from 'src/interfaces/group.interface';\r\n\r\n@Component({\r\n  selector: 'app-group-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"group.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"group.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"group.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let permission of group.permissions\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  group: GroupRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionRead[]\r\n  }\r\n  deletedResponse: GroupRead\r\n  errors: string[] = []\r\n\r\n  constructor(private svcGroup: GroupService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcGroup.retreive<GroupRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.group = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcGroup.delete<GroupDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/groups`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { GroupList } from 'src/interfaces/group.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-group-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.description.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupListComponent implements OnInit {\r\n  constructor(private svcGroup: GroupService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['name', 'description', 'code']\r\n  dataSource = new MatTableDataSource<GroupList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcGroup.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<GroupList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/groups/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/groups/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/groups/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/groups/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupRead,\r\n         GroupPermissionRead,\r\n         GroupUpdateRequest,\r\n         GroupUpdateResponse,\r\n         GroupPermissionUpdateResponse } from 'src/interfaces/group.interface';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { PermissionList } from 'src/interfaces/permission.interface';\r\n\r\n@Component({\r\n  selector: 'app-group-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.permissions\">\r\n            <mat-list-option *ngFor=\"let permission of permissionList\" [value]=\"permission.code\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <span *ngFor=\"let error of errors\" class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupUpdateComponent implements OnInit {\r\n  constructor(private svcGroup: GroupService,private svcPermission: PermissionService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.svcGroup.retreive<GroupRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.name = item.name\r\n      this.form.description = item.description\r\n      this.form.permissions = item.permissions.map(a => a.code)\r\n    })\r\n    this.svcPermission.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<PermissionList>) => {\r\n      this.permissionList = data.results\r\n    })\r\n  }\r\n\r\n  permissionList: PermissionList[]\r\n\r\n  slug: string\r\n  form:GroupUpdateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as string[]\r\n  }\r\n  updatedResponse:GroupUpdateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionUpdateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcGroup.put<GroupUpdateResponse, GroupUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/groups`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupRead, GroupPermissionRead } from 'src/interfaces/group.interface';\r\n\r\n@Component({\r\n  selector: 'app-group-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"group.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"group.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"group.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let permission of group.permissions\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  group: GroupRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionRead[]\r\n  }\r\n\r\n  constructor(private svcGroup: GroupService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcGroup.retreive<GroupRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.group = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PermissionCreateRequest,\r\n         PermissionCreateResponse,\r\n         PermissionServiceCreateResponse,\r\n         PermissionServiceRouteCreateResponse } from 'src/interfaces/permission.interface';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceRouteList } from 'src/interfaces/service.route.interface';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.name\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.description\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(ngModel)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!this.form.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.serviceRoutes\">\r\n            <mat-list-option *ngFor=\"let route of serviceRouteList\" [value]=\"route.code\">\r\n            {{route.service}} [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionCreateComponent implements OnInit {\r\n  constructor(private svcPermission: PermissionService,\r\n              private svcServiceRoute: ServiceRouteService,\r\n              private svcService: ServiceService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcServiceRoute.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceRouteList>) => {\r\n      this.serviceRouteList = data.results\r\n    })\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })\r\n  }\r\n\r\n  serviceRouteList: ServiceRouteList[]\r\n  serviceList: ServiceList[]\r\n\r\n  form:PermissionCreateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: \"\",\r\n    serviceRoutes: [] as string[]\r\n  }\r\n\r\n  createdResponse: PermissionCreateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceCreateResponse,\r\n    serviceRoutes: [] as PermissionServiceRouteCreateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcPermission.post<PermissionCreateResponse, PermissionCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/permissions`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PermissionRead,\r\n         PermissionServiceRead,\r\n         PermissionServiceRouteRead,\r\n         PermissionDeleteResponse } from 'src/interfaces/permission.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"permission.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"permission.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"permission.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"permission.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"permission.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"permission.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"permission.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"permission.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!permission.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let route of permission.serviceRoutes\">\r\n            [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  permission: PermissionRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceRead,\r\n    serviceRoutes: [] as PermissionServiceRouteRead[]\r\n  }\r\n  deletedResponse: PermissionDeleteResponse\r\n  errors: string[] = []\r\n\r\n  constructor(private svcPermission: PermissionService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcPermission.retreive<PermissionRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.permission = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcPermission.delete<PermissionDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/permissions`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { PermissionList } from 'src/interfaces/permission.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-permission-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.description.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"hasAllAccess\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Has all access </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.hasAllAccess}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"service\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Service </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.service.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n\r\n\r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionListComponent implements OnInit {\r\n  constructor(private svcPermission: PermissionService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['name', 'description', 'hasAllAccess', 'service', 'code']\r\n  dataSource = new MatTableDataSource<PermissionList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcPermission.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<PermissionList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/permissions/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/permissions/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/permissions/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/permissions/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PermissionRead,\r\n         PermissionServiceRead,\r\n         PermissionServiceRouteRead,\r\n         PermissionUpdateRequest,\r\n         PermissionUpdateResponse,\r\n         PermissionServiceUpdateResponse,\r\n         PermissionServiceRouteUpdateResponse } from 'src/interfaces/permission.interface';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceRouteList } from 'src/interfaces/service.route.interface';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.name\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.description\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(ngModel)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!this.form.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.serviceRoutes\">\r\n            <mat-list-option *ngFor=\"let route of serviceRouteList\" [value]=\"route.code\">\r\n            {{route.service}} [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionUpdateComponent implements OnInit {\r\n  constructor(private svcPermission: PermissionService,\r\n    private svcServiceRoute: ServiceRouteService,\r\n    private svcService: ServiceService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n      this.route.params.subscribe(({id}) => this.slug = id);\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.svcPermission.retreive<PermissionRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.name = item.name\r\n      this.form.description = item.description\r\n      this.form.hasAllAccess = item.hasAllAccess\r\n      this.form.service = item.service.code\r\n      this.form.serviceRoutes = item.serviceRoutes.map(a => a.code)\r\n    })\r\n    this.svcServiceRoute.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceRouteList>) => {\r\n      this.serviceRouteList = data.results\r\n    })\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })\r\n  }\r\n\r\n  slug: string\r\n\r\n  serviceRouteList: ServiceRouteList[]\r\n  serviceList: ServiceList[]\r\n\r\n  form:PermissionUpdateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: \"\",\r\n    serviceRoutes: [] as string[]\r\n  }\r\n\r\n  updatedResponse: PermissionUpdateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceUpdateResponse,\r\n    serviceRoutes: [] as PermissionServiceRouteUpdateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n   }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcPermission.put<PermissionUpdateResponse, PermissionUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/permissions`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PermissionRead,\r\n         PermissionServiceRead,\r\n         PermissionServiceRouteRead } from 'src/interfaces/permission.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"permission.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"permission.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"permission.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"permission.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"permission.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"permission.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"permission.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n        </mat-card>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"permission.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!permission.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let route of permission.serviceRoutes\">\r\n            [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  permission: PermissionRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceRead,\r\n    serviceRoutes: [] as PermissionServiceRouteRead[]\r\n  }\r\n\r\n  constructor(private svcPermission: PermissionService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcPermission.retreive<PermissionRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.permission = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { ServiceRouteCreateRequest, ServiceRouteCreateResponse } from 'src/interfaces/service.route.interface';\r\nimport { Router } from '@angular/router';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\n\r\n@Component({\r\n  selector: 'app-customer-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"this.form.url\" (input)=\"this.form.url = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Method</mat-label>\r\n          <mat-select [(value)]=\"this.form.method\">\r\n            <mat-option value=\"GET\">GET</mat-option>\r\n            <mat-option value=\"POST\">POST</mat-option>\r\n            <mat-option value=\"PUT\">PUT</mat-option>\r\n            <mat-option value=\"DELETE\">DELETE</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(value)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteCreateComponent implements OnInit {\r\n  constructor(private svcServiceRoute: ServiceRouteService,private svcService: ServiceService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })\r\n  }\r\n\r\n  serviceList: ServiceList[]\r\n\r\n  form:ServiceRouteCreateRequest = {\r\n    url: \"\",\r\n    method: \"\",\r\n    service: \"\"\r\n  }\r\n\r\n  createdResponse:ServiceRouteCreateResponse = {\r\n    code: \"\",\r\n    url: \"\",\r\n    method: \"\",\r\n    service: \"\"\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcServiceRoute.post<ServiceRouteCreateResponse, ServiceRouteCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/service-routes`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteRead,ServiceRouteServiceRead, ServiceRouteDeleteResponse } from 'src/interfaces/service.route.interface';\r\n\r\n@Component({\r\n  selector: 'app-customer-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"serviceRoute.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"serviceRoute.url\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Method</mat-label>\r\n          <input matInput [value]=\"serviceRoute.method\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n        </mat-card>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  serviceRoute: ServiceRouteRead = {\r\n    code: \"\",\r\n    url: \"\",\r\n    method: \"\",\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\",\r\n    } as ServiceRouteServiceRead\r\n  }\r\n  deletedResponse: ServiceRouteDeleteResponse\r\n  errors: string[] = []\r\n\r\n  constructor(private svcServiceRoute: ServiceRouteService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcServiceRoute.retreive<ServiceRouteRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.serviceRoute = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcServiceRoute.delete<ServiceRouteDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/service-routes`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceRouteList } from 'src/interfaces/service.route.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-service-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"url\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Url </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.url.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"method\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Method </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.method.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"service\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Service </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.service.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteListComponent implements OnInit {\r\n  constructor(private svcServiceRoute: ServiceRouteService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['url', 'method', 'service', 'code']\r\n  dataSource = new MatTableDataSource<ServiceRouteList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcServiceRoute.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceRouteList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/service-routes/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/service-routes/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/service-routes/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/service-routes/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteRead,\r\n         ServiceRouteServiceRead,\r\n         ServiceRouteUpdateRequest,\r\n         ServiceRouteUpdateResponse } from 'src/interfaces/service.route.interface';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceService } from 'src/services/service.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"this.form.url\" (input)=\"this.form.url = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Method</mat-label>\r\n          <mat-select [(value)]=\"this.form.method\">\r\n            <mat-option value=\"GET\">GET</mat-option>\r\n            <mat-option value=\"POST\">POST</mat-option>\r\n            <mat-option value=\"PUT\">PUT</mat-option>\r\n            <mat-option value=\"DELETE\">DELETE</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(value)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteUpdateComponent implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCustomers()\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })    \r\n  }\r\n\r\n  serviceList: ServiceList[]\r\n\r\n  slug: string\r\n  form:ServiceRouteUpdateRequest = {\r\n    url: \"\",\r\n    method: \"\",\r\n    service: \"\",\r\n  }\r\n  updatedResponse:ServiceRouteUpdateResponse\r\n\r\n  errors: string[] = []\r\n\r\n  constructor(private svcServiceRoute: ServiceRouteService,private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n  }\r\n  fetchCustomers () {\r\n    this.svcServiceRoute.retreive<ServiceRouteRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.url = item.url\r\n      this.form.method = item.method\r\n      this.form.service = item.service.code\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcServiceRoute.put<ServiceRouteUpdateResponse, ServiceRouteUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/service-routes`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteRead, ServiceRouteServiceRead } from 'src/interfaces/service.route.interface';\r\n\r\n@Component({\r\n  selector: 'app-service-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"serviceRoute.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"serviceRoute.url\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Method</mat-label>\r\n          <input matInput [value]=\"serviceRoute.method\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n\r\n        </mat-card>\r\n\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteViewComponent implements OnInit {\r\n\r\n  slug: string\r\n\r\n  serviceRoute: ServiceRouteRead = {\r\n    code: \"\",\r\n    url: \"\",\r\n    method: \"\",\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\",\r\n    } as ServiceRouteServiceRead\r\n  }\r\n\r\n  constructor(private svcServiceRoute: ServiceRouteService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcServiceRoute.retreive<ServiceRouteRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.serviceRoute = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceCreateRequest, ServiceCreateResponse } from 'src/interfaces/service.interface';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customer-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"this.form.baseUrl\" (input)=\"this.form.baseUrl = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceCreateComponent {\r\n  constructor(private svcService: ServiceService, private router: Router) { }\r\n\r\n  form:ServiceCreateRequest = {\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  createdResponse:ServiceCreateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcService.post<ServiceCreateResponse, ServiceCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/services`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRead, ServiceDeleteResponse } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-customer-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"service.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"service.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"service.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"service.baseUrl\" readonly>\r\n        </mat-form-field> \r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  service: ServiceRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    baseUrl: \"\"\r\n  }\r\n  deletedResponse: ServiceRead\r\n  errors: string[] = []\r\n\r\n  constructor(private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcService.retreive<ServiceRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.service = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcService.delete<ServiceDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/services`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-service-list',\r\n  template: `\r\n    \r\n    <mat-card style=\"margin:30px;\">\r\n      \r\n      <mat-card-title>\r\n        Service List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.description.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"baseUrl\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Base Url </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.baseUrl.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator #appPaginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceListComponent implements OnInit {\r\n  constructor(private svcService: ServiceService, private router: Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['name', 'description', 'baseUrl', 'code']\r\n  dataSource = new MatTableDataSource<ServiceList>()\r\n\r\n  populateServices () {\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/services/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/services/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/services/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/services/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRead, ServiceUpdateRequest, ServiceUpdateResponse } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-customer-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"this.form.baseUrl\" (input)=\"this.form.baseUrl = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <span *ngFor=\"let error of errors\" class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceUpdateComponent implements OnInit {\r\n\r\n  slug: string\r\n  form:ServiceUpdateRequest = {\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\",\r\n  }\r\n  updatedResponse:ServiceUpdateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n  constructor(private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCustomers()\r\n  }\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n  }\r\n  fetchCustomers () {\r\n    this.svcService.retreive<ServiceRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcService.put<ServiceUpdateResponse, ServiceUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/services`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRead } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-service-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"service.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"service.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"service.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"service.baseUrl\" readonly>\r\n        </mat-form-field> \r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  service: ServiceRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    baseUrl: \"\"\r\n  }\r\n\r\n  constructor(private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcService.retreive<ServiceRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.service = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { UserCreateRequest,\r\n         UserCreateResponse,\r\n         UserGroupCreateResponse } from 'src/interfaces/user.interface';\r\nimport { Router } from '@angular/router';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { GroupList } from 'src/interfaces/group.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\n\r\n@Component({\r\n  selector: 'app-user-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        User Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Firstname</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.firstname\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Middlename</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.middlename\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Lastname</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.lastname\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Username</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.username\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Password</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.password\" type=\"password\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Email</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.email\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n        \r\n        <mat-form-field class=\"w-full\" appearance=\"fill\">\r\n          <mat-label>Birthdate</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"this.form.birthdate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isActive\">Is Active</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isSuperuser\">Is Superuser</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Groups\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.groups\">\r\n            <mat-list-option *ngFor=\"let group of groupList\" [value]=\"group.code\">\r\n              {{group.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  constructor(private svcUser: UserService, private svcGroup: GroupService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcGroup.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<GroupList>) => {\r\n      this.groupList = data.results;\r\n    })\r\n  }\r\n\r\n  groupList: GroupList[]\r\n\r\n  form:UserCreateRequest = {\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as string[],\r\n  }\r\n\r\n  createdResponse:UserCreateResponse = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupCreateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcUser.post<UserCreateResponse, UserCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/users`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRead,\r\n         UserGroupRead,\r\n         UserDeleteResponse,\r\n         UserGroupDeleteResponse } from 'src/interfaces/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-user-delete',\r\n  template: `\r\n  <mat-card style=\"margin:30px;\">\r\n    <mat-card-title>\r\n      User Delete\r\n    </mat-card-title>\r\n    <mat-card-subtitle>\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n    </mat-card-subtitle>\r\n\r\n    <mat-card-content style=\"display:flex-root\">\r\n\r\n      <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n      <br><br>\r\n\r\n      <mat-form-field class=\"w-full\" disabled>\r\n        <mat-label>Code</mat-label>\r\n        <input matInput [value]=\"user.code\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Firstname</mat-label>\r\n        <input matInput [value]=\"user.firstname\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Middlename</mat-label>\r\n        <input matInput [value]=\"user.middlename\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Lastname</mat-label>\r\n        <input matInput [value]=\"user.lastname\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Username</mat-label>\r\n        <input matInput [value]=\"user.username\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput [value]=\"user.email\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Birthdate</mat-label>\r\n        <input matInput [value]=\"user.birthdate\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>IsActive</mat-label>\r\n        <input matInput [value]=\"user.isActive\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>IsSuperuser</mat-label>\r\n        <input matInput [value]=\"user.isSuperuser\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-card class=\"mat-elevation-z0\">\r\n        <mat-card-subtitle>\r\n          Groups\r\n        </mat-card-subtitle>\r\n        <mat-selection-list dense>\r\n          <mat-list-option *ngFor=\"let group of user.groups\">\r\n            {{group.name}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-card>\r\n\r\n      <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n        <div *ngFor=\"let error of errors\">\r\n          <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n        </div>\r\n      </mat-card>\r\n\r\n      <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n  `,\r\n})\r\nexport class UserDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  user: UserRead = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupRead[]\r\n  }\r\n  deletedResponse: UserDeleteResponse\r\n  errors: string[] = []\r\n\r\n  constructor(private svcUser: UserService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcUser.retreive<UserRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.user = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcUser.delete<UserDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/users`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { UserList } from 'src/interfaces/user.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        User List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"firstname\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Firstname </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.firstname.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"middlename\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Middlename </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.middlename.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"lastname\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Lastname </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.lastname.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"username\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.username.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.email.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"birthdate\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Birthdate </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.birthdate.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"isActive\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> IsActive </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.isActive}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"isSuperuser\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> IsSuperuser </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.isSuperuser}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  constructor(private svcUser: UserService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['firstname',\r\n                                'middlename',\r\n                                'lastname',\r\n                                'username',\r\n                                'email',\r\n                                'birthdate',\r\n                                'isActive',\r\n                                'isSuperuser',\r\n                                'code']\r\n  dataSource = new MatTableDataSource<UserList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcUser.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<UserList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/users/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/users/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/users/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/users/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRead,\r\n         UserGroupRead,\r\n         UserUpdateRequest,\r\n         UserUpdateResponse,\r\n         UserGroupUpdateResponse } from 'src/interfaces/user.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { GroupList } from 'src/interfaces/group.interface';\r\nimport { GroupService } from 'src/services/group.service';\r\n\r\n@Component({\r\n  selector: 'app-user-update',\r\n  template: `\r\n  <mat-card style=\"margin:30px;\">\r\n  <mat-card-title>\r\n    User Update\r\n  </mat-card-title>\r\n  <mat-card-subtitle>\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n  </mat-card-subtitle>\r\n\r\n  <mat-card-content style=\"display:flex-root\">\r\n\r\n    <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n    <br><br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Firstname</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.firstname\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Middlename</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.middlename\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Lastname</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.lastname\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.username\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Email</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\">\r\n      <mat-label>Birthdate</mat-label>\r\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"this.form.birthdate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isActive\">Is Active</mat-checkbox>\r\n\r\n    <br>\r\n    <br>\r\n\r\n    <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isSuperuser\">Is Superuser</mat-checkbox>\r\n\r\n    <br>\r\n    <br>\r\n\r\n    <mat-card class=\"mat-elevation-z0\">\r\n      <mat-card-subtitle>\r\n        Groups\r\n      </mat-card-subtitle>\r\n      <mat-selection-list dense [(ngModel)]=\"this.form.groups\">\r\n        <mat-list-option *ngFor=\"let group of groupList\" [value]=\"group.code\">\r\n          {{group.name}}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </mat-card>\r\n\r\n    <br>\r\n\r\n    <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n      <div *ngFor=\"let error of errors\">\r\n        <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n      </div>\r\n    </mat-card>\r\n\r\n    <br><br>\r\n\r\n    <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n  `,\r\n})\r\nexport class UserUpdateComponent implements OnInit {\r\n  constructor(private svcUser: UserService, private svcGroup: GroupService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.svcUser.retreive<UserRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.firstname = item.firstname\r\n      this.form.middlename = item.middlename\r\n      this.form.lastname = item.lastname\r\n      this.form.username = item.username\r\n      this.form.email = item.email\r\n      this.form.birthdate = item.birthdate\r\n      this.form.isActive = item.isActive\r\n      this.form.isSuperuser = item.isSuperuser\r\n      this.form.groups = item.groups.map(a => a.code)\r\n    })\r\n\r\n    this.svcGroup.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<GroupList>) => {\r\n      this.groupList = data.results;\r\n    })\r\n  }\r\n\r\n  slug: string = \"\"\r\n  groupList: GroupList[]\r\n\r\n  form:UserUpdateRequest = {\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as string[],\r\n  }\r\n\r\n  updatedResponse:UserUpdateResponse = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupUpdateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n  }\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcUser.put<UserUpdateResponse, UserUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/users`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRead, UserGroupRead } from 'src/interfaces/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-user-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        User Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"user.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Firstname</mat-label>\r\n          <input matInput [value]=\"user.firstname\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Middlename</mat-label>\r\n          <input matInput [value]=\"user.middlename\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Lastname</mat-label>\r\n          <input matInput [value]=\"user.lastname\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput [value]=\"user.username\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput [value]=\"user.email\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Birthdate</mat-label>\r\n          <input matInput [value]=\"user.birthdate\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>IsActive</mat-label>\r\n          <input matInput [value]=\"user.isActive\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>IsSuperuser</mat-label>\r\n          <input matInput [value]=\"user.isSuperuser\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Groups\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let group of user.groups\">\r\n              {{group.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class UserViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  user: UserRead = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupRead[]\r\n  }\r\n\r\n  constructor(private svcUser: UserService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcUser.retreive<UserRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.user = item\r\n    })\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_HOST: \"http://localhost:5000\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","interface String {\r\n  trimByMaxCharacter(maxCharacter: number): string;\r\n}\r\n\r\nString.prototype.trimByMaxCharacter = function (maxCharacter: number) : string {\r\n  if (this && this.length > maxCharacter) {\r\n    return `${this.substr(0, maxCharacter)}...` as string\r\n  }\r\n  return this as string;\r\n}","export function IsServer () {\r\n    return ! (typeof window != 'undefined' && window.document);\r\n}\r\nexport function IsClient () {\r\n    return (typeof window != 'undefined' && window.document);\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\nimport { LoginRequest, LoginResponse, CurrentUser } from 'src/interfaces/auth.interface';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/auth/')\r\n   }\r\n\r\n   isAuthenticated: boolean = false\r\n   currentUser: CurrentUser\r\n\r\n   Login (form: LoginRequest) : Observable<LoginResponse> {\r\n    return this.post<LoginResponse, LoginRequest>(form, 'login')\r\n   }\r\n\r\n   FetchCurrentUser () : Observable<CurrentUser> {\r\n    return this.retreive<CurrentUser>('current-user')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class GroupService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Groups/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class PermissionService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Permissions/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class ServiceRouteService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/ServiceRoutes/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class ServiceService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Services/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class UserService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Users/')\r\n   }\r\n}","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IsClient } from 'src/helpers/processHelper';\r\n\r\nexport class PaginationQuery {\r\n  constructor (public pageNumber: number,\r\n               public pageSize: number,\r\n               public filter: string,\r\n               public sortOrder: string) {\r\n  }\r\n}\r\n\r\nexport class GenericService{\r\n  constructor(private http: HttpClient, private baseUrl: string) {\r\n    \r\n    // TODO: Put this in config\r\n    this.apiHost = environment.API_HOST\r\n\r\n    this.url = `${this.apiHost}${baseUrl}`\r\n\r\n    if (IsClient()) {\r\n      let cookieObject = (Object as any).fromEntries(document.cookie.split(/; */).map(c => {\r\n          const [ key, ...v ] = c.split('=');\r\n          return [ key, decodeURIComponent(v.join('=')) ];\r\n      }));\r\n\r\n      this.token = cookieObject.access_token\r\n    }\r\n  }\r\n\r\n  apiHost: string\r\n  url: string\r\n  token: string\r\n\r\n  paginate<TResult> (pagination: PaginationQuery) {\r\n    // let params = new HttpParams()\r\n    // if (filter)     params.append('filter', filter)\r\n    // if (sortOrder)  params.append('sortOrder', sortOrder)\r\n    // if (pageNumber) params.append('pageNumber', pageNumber.toString())\r\n    // if (pageSize)   params.append('pageSize', pageSize.toString())\r\n    // return this.http.get<T[]>(this.url, {\r\n    //   params\r\n    // })\r\n    return this.http.get<PaginatedResponse<TResult>>(this.url, {\r\n      params: new HttpParams().set('filter', pagination.filter ? pagination.filter : '')\r\n                              .set('sortOrder', pagination.sortOrder ? pagination.sortOrder : '')\r\n                              .set('pageNumber', pagination.pageNumber ? pagination.pageNumber.toString() : '')\r\n                              .set('pageSize', pagination.pageSize ? pagination.pageSize.toString() : ''),\r\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)\r\n    })\r\n  }\r\n  retreive<TResult> (slug: string) {\r\n    return this.http.get<TResult>(`${this.url}${slug}`, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  post<TResult,TRequest> (body: TRequest, slug?: string) {\r\n    return this.http.post<TResult>(`${this.url}${slug ? slug : ''}`, body, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  put<TResult,TRequest> (slug: string, body: TRequest) {\r\n    return this.http.put<TResult>(`${this.url}${slug}`, body, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  patch<TResult,TRequest> (slug: string, body: TRequest) {\r\n    return this.http.patch<TResult>(`${this.url}${slug}`, body, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  delete<TResult> (slug: string) {\r\n    return this.http.delete<TResult>(`${this.url}${slug}`, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n}"]}