{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.sidebar.component.ts","./src/app/app.topbar.component.ts","./src/app/auth/can.activate.ts","./src/app/auth/login.component.ts","./src/app/group/group-create.component.ts","./src/app/group/group-delete.component.ts","./src/app/group/group-list.component.ts","./src/app/group/group-update.component.ts","./src/app/group/group-view.component.ts","./src/app/permission/permission-create.component.ts","./src/app/permission/permission-delete.component.ts","./src/app/permission/permission-list.component.ts","./src/app/permission/permission-update.component.ts","./src/app/permission/permission-view.component.ts","./src/app/service-route/service-route-create.component.ts","./src/app/service-route/service-route-delete.component.ts","./src/app/service-route/service-route-list.component.ts","./src/app/service-route/service-route-update.component.ts","./src/app/service-route/service-route-view.component.ts","./src/app/service/service-create.component.ts","./src/app/service/service-delete.component.ts","./src/app/service/service-list.component.ts","./src/app/service/service-update.component.ts","./src/app/service/service-view.component.ts","./src/app/user/user-create.component.ts","./src/app/user/user-delete.component.ts","./src/app/user/user-list.component.ts","./src/app/user/user-update.component.ts","./src/app/user/user-view.component.ts","./src/environments/environment.ts","./src/extension-methods/stringExtensions.ts","./src/helpers/processHelper.ts","./src/main.ts","./src/services/auth.service.ts","./src/services/group.service.ts","./src/services/permission.service.ts","./src/services/service.route.service.ts","./src/services/service.service.ts","./src/services/user.service.ts","./src/services/z.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from '../../src/app/auth/can.activate'\r\n\r\nimport { LoginComponent } from './auth/login.component';\r\n\r\nimport { ServiceListComponent } from './service/service-list.component';\r\nimport { ServiceViewComponent } from './service/service-view.component';\r\nimport { ServiceCreateComponent } from './service/service-create.component';\r\nimport { ServiceUpdateComponent } from './service/service-update.component';\r\nimport { ServiceDeleteComponent } from './service/service-delete.component';\r\n\r\nimport { ServiceRouteListComponent } from './service-route/service-route-list.component';\r\nimport { ServiceRouteViewComponent } from './service-route/service-route-view.component';\r\nimport { ServiceRouteCreateComponent } from './service-route/service-route-create.component';\r\nimport { ServiceRouteUpdateComponent } from './service-route/service-route-update.component';\r\nimport { ServiceRouteDeleteComponent } from './service-route/service-route-delete.component';\r\n\r\nimport { PermissionListComponent } from './permission/permission-list.component';\r\nimport { PermissionViewComponent } from './permission/permission-view.component';\r\nimport { PermissionCreateComponent } from './permission/permission-create.component';\r\nimport { PermissionUpdateComponent } from './permission/permission-update.component';\r\nimport { PermissionDeleteComponent } from './permission/permission-delete.component';\r\n\r\nimport { GroupListComponent } from './group/group-list.component';\r\nimport { GroupViewComponent } from './group/group-view.component';\r\nimport { GroupCreateComponent } from './group/group-create.component';\r\nimport { GroupUpdateComponent } from './group/group-update.component';\r\nimport { GroupDeleteComponent } from './group/group-delete.component';\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserViewComponent } from './user/user-view.component';\r\nimport { UserCreateComponent } from './user/user-create.component';\r\nimport { UserUpdateComponent } from './user/user-update.component';\r\nimport { UserDeleteComponent } from './user/user-delete.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'login', component: LoginComponent },\r\n\r\n  { path: 'services', component: ServiceListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/view/:id', component: ServiceViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/create', component: ServiceCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/update/:id', component: ServiceUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'services/delete/:id', component: ServiceDeleteComponent, canActivate: [ AuthGuardService ] },\r\n\r\n  { path: 'service-routes', component: ServiceRouteListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/view/:id', component: ServiceRouteViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/create', component: ServiceRouteCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/update/:id', component: ServiceRouteUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'service-routes/delete/:id', component: ServiceRouteDeleteComponent, canActivate: [ AuthGuardService ] },\r\n\r\n  { path: 'permissions', component: PermissionListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/view/:id', component: PermissionViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/create', component: PermissionCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/update/:id', component: PermissionUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'permissions/delete/:id', component: PermissionDeleteComponent, canActivate: [ AuthGuardService ] },\r\n\r\n  { path: 'groups', component: GroupListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/view/:id', component: GroupViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/create', component: GroupCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/update/:id', component: GroupUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'groups/delete/:id', component: GroupDeleteComponent, canActivate: [ AuthGuardService ] },  \r\n\r\n  { path: 'users', component: UserListComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/view/:id', component: UserViewComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/create', component: UserCreateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/update/:id', component: UserUpdateComponent, canActivate: [ AuthGuardService ] },\r\n  { path: 'users/delete/:id', component: UserDeleteComponent, canActivate: [ AuthGuardService ] },  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule  { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { IsServer } from 'src/helpers/processHelper';\r\n\r\n// modes: side, push, over\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n\r\n    <div *ngIf=\"isLoaded\">\r\n\r\n      <div *ngIf=\"isAuthenticated; then thenBlock else elseBlock\"></div>\r\n\r\n      <ng-template #thenBlock>\r\n        <app-topbar (onToggleSideBar)=\"this.onToggleSideBar()\"></app-topbar>\r\n        <app-sidebar [toggleState]=[toggleState]>\r\n          <router-outlet></router-outlet>\r\n        </app-sidebar>\r\n      </ng-template>\r\n\r\n      <ng-template #elseBlock>\r\n        <app-login></app-login>\r\n      </ng-template>\r\n\r\n    </div>\r\n\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private svcAuth: AuthService, private router: Router) { }\r\n\r\n  title = 'CORE-angular10'\r\n  toggleState:boolean = false\r\n  isAuthenticated = false\r\n  isLoaded = false\r\n\r\n  ngOnInit () {\r\n    if (IsServer()) {\r\n      return\r\n    }\r\n\r\n    this.svcAuth.FetchCurrentUser()\r\n    .subscribe(\r\n      data => {\r\n        this.toggleState = true\r\n\r\n        this.svcAuth.isAuthenticated = true\r\n        this.isAuthenticated = this.svcAuth.isAuthenticated\r\n        this.svcAuth.currentUser = data\r\n      },\r\n      ({error}) => {\r\n        this.svcAuth.isAuthenticated = false\r\n        this.isAuthenticated = this.svcAuth.isAuthenticated\r\n        this.router.navigateByUrl(`/login`)\r\n      })\r\n\r\n      this.isLoaded = true\r\n  }\r\n\r\n  onToggleSideBar () {\r\n    this.toggleState = !this.toggleState\r\n  }\r\n}\r\n","// Custom Extension Methods\r\nimport 'src/extension-methods/stringExtensions'\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\n//Angular Material Components\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\n\r\n\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppSideBarComponent } from './app.sidebar.component';\r\nimport { AppTopBarComponent } from './app.topbar.component';\r\n\r\n\r\nimport { LoginComponent } from './auth/login.component';\r\n\r\n\r\nimport { ServiceListComponent } from './service/service-list.component';\r\nimport { ServiceViewComponent } from './service/service-view.component';\r\nimport { ServiceCreateComponent } from './service/service-create.component';\r\nimport { ServiceUpdateComponent } from './service/service-update.component';\r\nimport { ServiceDeleteComponent } from './service/service-delete.component';\r\n\r\n\r\nimport { ServiceRouteListComponent } from './service-route/service-route-list.component';\r\nimport { ServiceRouteViewComponent } from './service-route/service-route-view.component';\r\nimport { ServiceRouteCreateComponent } from './service-route/service-route-create.component';\r\nimport { ServiceRouteUpdateComponent } from './service-route/service-route-update.component';\r\nimport { ServiceRouteDeleteComponent } from './service-route/service-route-delete.component';\r\n\r\n\r\nimport { PermissionListComponent } from './permission/permission-list.component';\r\nimport { PermissionViewComponent } from './permission/permission-view.component';\r\nimport { PermissionCreateComponent } from './permission/permission-create.component';\r\nimport { PermissionUpdateComponent } from './permission/permission-update.component';\r\nimport { PermissionDeleteComponent } from './permission/permission-delete.component';\r\n\r\n\r\nimport { GroupListComponent } from './group/group-list.component';\r\nimport { GroupViewComponent } from './group/group-view.component';\r\nimport { GroupCreateComponent } from './group/group-create.component';\r\nimport { GroupUpdateComponent } from './group/group-update.component';\r\nimport { GroupDeleteComponent } from './group/group-delete.component';\r\n\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserViewComponent } from './user/user-view.component';\r\nimport { UserCreateComponent } from './user/user-create.component';\r\nimport { UserUpdateComponent } from './user/user-update.component';\r\nimport { UserDeleteComponent } from './user/user-delete.component';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { AuthGuardService } from './auth/can.activate';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,AppSideBarComponent,AppTopBarComponent,\r\n\r\n    LoginComponent,\r\n\r\n    ServiceListComponent,\r\n    ServiceViewComponent,\r\n    ServiceCreateComponent,\r\n    ServiceUpdateComponent,\r\n    ServiceDeleteComponent,\r\n\r\n    ServiceRouteListComponent,\r\n    ServiceRouteViewComponent,\r\n    ServiceRouteCreateComponent,\r\n    ServiceRouteUpdateComponent,\r\n    ServiceRouteDeleteComponent,\r\n\r\n    PermissionListComponent,\r\n    PermissionViewComponent,\r\n    PermissionCreateComponent,\r\n    PermissionUpdateComponent,\r\n    PermissionDeleteComponent,\r\n\r\n    GroupListComponent,\r\n    GroupViewComponent,\r\n    GroupCreateComponent,\r\n    GroupUpdateComponent,\r\n    GroupDeleteComponent,\r\n\r\n    UserListComponent,\r\n    UserViewComponent,\r\n    UserCreateComponent,\r\n    UserUpdateComponent,\r\n    UserDeleteComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [\r\n    AuthGuardService,\r\n    \r\n    AuthService,\r\n    ServiceService,\r\n    ServiceRouteService,\r\n    PermissionService,\r\n    GroupService,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\n// modes: side, push, over\r\ninterface Module {\r\n  name: string;\r\n  urlPath: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `\r\n    <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"false\">\r\n      <mat-drawer [opened]=\"toggleState\" [mode]=\"'side'\">\r\n\r\n        <mat-selection-list [multiple]=\"false\" dense>\r\n          <mat-list-option *ngFor=\"let module of modules\" [routerLink]=\"module.urlPath\" routerLinkActive=\"active\">\r\n            {{module.name}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n\r\n      </mat-drawer>\r\n      <mat-drawer-content style=\"min-height:100vh\">\r\n        <ng-content></ng-content>\r\n      </mat-drawer-content>\r\n    </mat-drawer-container>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppSideBarComponent {\r\n  title = 'CORE-angular10';\r\n  modules:Module[] = [\r\n    { name: \"Services\", urlPath: \"/services\"},\r\n    { name: \"ServiceRoutes\", urlPath: \"/service-routes\"},\r\n    // { name: \"Modules\", urlPath: \"/modules\"},\r\n    { name: \"Groups\", urlPath: \"/groups\"},\r\n    { name: \"Permissions\", urlPath: \"/permissions\"},\r\n    { name: \"Users\", urlPath: \"/users\"},\r\n  ]\r\n\r\n  @Input() toggleState: boolean;\r\n}\r\n","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { CurrentUser } from 'src/interfaces/auth.interface';\r\n\r\n// modes: side, push, over\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  template: `\r\n    <mat-toolbar color=\"primary\" style=\"height:56px;display:flex;\">\r\n      <button mat-icon-button (click)=\"this.onToggle()\"><mat-icon>menu</mat-icon></button>\r\n      <button mat-button routerLink=\"/\" routerLinkActive=\"active\">CORE Admin</button>\r\n\r\n      <mat-menu #matMenu=\"matMenu\">\r\n        <ng-template matMenuContent>\r\n          <button mat-menu-item (click)=\"this.viewProfile()\">Profile</button>\r\n          <button mat-menu-item (click)=\"this.setSettings()\">Settings</button>\r\n          <button mat-menu-item (click)=\"this.logoutUser()\">Logout</button>\r\n        </ng-template>\r\n      </mat-menu>\r\n      <button mat-button [matMenuTriggerFor]=\"matMenu\" style=\"margin-left:auto;\">{{currentUser.firstname}} {{currentUser.lastname}}<mat-icon>more_vert</mat-icon></button>\r\n    </mat-toolbar>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppTopBarComponent {\r\n  constructor (private svcAuth: AuthService,) {\r\n    this.currentUser = svcAuth.currentUser\r\n  }\r\n\r\n  title = 'CORE-angular10';\r\n  currentUser: CurrentUser\r\n  \r\n  @Output() onToggleSideBar = new EventEmitter<boolean>();\r\n\r\n  onToggle () {\r\n    this.onToggleSideBar.emit();\r\n  }\r\n\r\n  viewProfile (): void {}\r\n  setSettings (): void {}\r\n  logoutUser (): void {\r\n    document.cookie = `access_token=`\r\n    document.location.reload()\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { IsServer } from 'src/helpers/processHelper';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate  {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    if (IsServer()) {\r\n      return true\r\n    }\r\n\r\n    let cookieObject = (Object as any).fromEntries(document.cookie.split(/; */).map(c => {\r\n        const [ key, ...v ] = c.split('=');\r\n        return [ key, decodeURIComponent(v.join('=')) ];\r\n    }));\r\n\r\n    let token = cookieObject.access_token\r\n\r\n    if (!token) {\r\n      this.router.navigateByUrl(`/login`)\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { LoginRequest, LoginResponse } from '../../interfaces/auth.interface'\r\nimport { AuthService } from 'src/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div style=\"display:flex;height:100vh;width:100vw;\">\r\n      <mat-card style=\"margin:auto;width:300px\">\r\n        <mat-card-title>\r\n          Login\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n        </mat-card-subtitle>\r\n\r\n        <mat-card-content style=\"display:flex-root\">\r\n\r\n          <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n            <mat-label>Username</mat-label>\r\n            <input matInput [value]=\"this.form.username\" (input)=\"this.form.username = $event.target.value\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n            <mat-label>Password</mat-label>\r\n            <input matInput [(ngModel)]=\"this.form.password\" type=\"password\">\r\n          </mat-form-field>\r\n\r\n          <br><br>\r\n\r\n          <button mat-stroked-button color=\"primary\" (click)=\"this.onSubmitLogin()\">Login</button>\r\n\r\n        </mat-card-content>\r\n\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginComponent {\r\n\r\n  constructor(private svcAuth: AuthService, private router: Router) { }\r\n\r\n  form: LoginRequest = {\r\n    username: \"admin\",\r\n    password: \"p@ssw0rd\"\r\n  }\r\n\r\n  loginResponse: LoginResponse = {\r\n    token: \"\"\r\n  }\r\n\r\n  error = \"\"\r\n\r\n  onSubmitLogin(): void {\r\n    this.svcAuth.Login(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.loginResponse = data\r\n\r\n      document.cookie = `access_token=`\r\n      document.cookie = `access_token=${data.token}`\r\n      this.router.navigateByUrl(`/`)\r\n      .then(() => {\r\n        document.location.reload()\r\n      })\r\n    },\r\n    ({error}) => {\r\n      this.error = error\r\n      this.svcAuth.isAuthenticated = false\r\n      document.cookie = `access_token=`\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { GroupCreateRequest,\r\n         GroupCreateResponse,\r\n         GroupPermissionCreateResponse } from 'src/interfaces/group.interface';\r\nimport { Router } from '@angular/router';\r\nimport { PermissionList } from 'src/interfaces/permission.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\n\r\n@Component({\r\n  selector: 'app-group-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.permissions\">\r\n            <mat-list-option *ngFor=\"let permission of permissionList\" [value]=\"permission.code\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupCreateComponent implements OnInit {\r\n  constructor(private svcGroup: GroupService, private svcPermission: PermissionService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcPermission.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<PermissionList>) => {\r\n      this.permissionList = data.results\r\n    })\r\n  }\r\n\r\n  permissionList: PermissionList[]\r\n\r\n  form:GroupCreateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as string[]\r\n  }\r\n\r\n  createdResponse:GroupCreateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionCreateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcGroup.post<GroupCreateResponse, GroupCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/groups`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupRead,\r\n         GroupPermissionRead,\r\n         GroupDeleteResponse } from 'src/interfaces/group.interface';\r\n\r\n@Component({\r\n  selector: 'app-group-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"group.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"group.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"group.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let permission of group.permissions\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  group: GroupRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionRead[]\r\n  }\r\n  deletedResponse: GroupRead\r\n  errors: string[] = []\r\n\r\n  constructor(private svcGroup: GroupService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcGroup.retreive<GroupRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.group = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcGroup.delete<GroupDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/groups`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { GroupList } from 'src/interfaces/group.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-group-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.description.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupListComponent implements OnInit {\r\n  constructor(private svcGroup: GroupService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['name', 'description', 'code']\r\n  dataSource = new MatTableDataSource<GroupList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcGroup.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<GroupList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/groups/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/groups/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/groups/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/groups/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupRead,\r\n         GroupPermissionRead,\r\n         GroupUpdateRequest,\r\n         GroupUpdateResponse,\r\n         GroupPermissionUpdateResponse } from 'src/interfaces/group.interface';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { PermissionList } from 'src/interfaces/permission.interface';\r\n\r\n@Component({\r\n  selector: 'app-group-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.permissions\">\r\n            <mat-list-option *ngFor=\"let permission of permissionList\" [value]=\"permission.code\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <span *ngFor=\"let error of errors\" class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupUpdateComponent implements OnInit {\r\n  constructor(private svcGroup: GroupService,private svcPermission: PermissionService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.svcGroup.retreive<GroupRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.name = item.name\r\n      this.form.description = item.description\r\n      this.form.permissions = item.permissions.map(a => a.code)\r\n    })\r\n    this.svcPermission.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<PermissionList>) => {\r\n      this.permissionList = data.results\r\n    })\r\n  }\r\n\r\n  permissionList: PermissionList[]\r\n\r\n  slug: string\r\n  form:GroupUpdateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as string[]\r\n  }\r\n  updatedResponse:GroupUpdateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionUpdateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcGroup.put<GroupUpdateResponse, GroupUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/groups`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupRead, GroupPermissionRead } from 'src/interfaces/group.interface';\r\n\r\n@Component({\r\n  selector: 'app-group-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Group Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"group.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"group.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"group.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Permissions\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let permission of group.permissions\">\r\n              {{permission.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class GroupViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  group: GroupRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    permissions: [] as GroupPermissionRead[]\r\n  }\r\n\r\n  constructor(private svcGroup: GroupService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/groups`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcGroup.retreive<GroupRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.group = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PermissionCreateRequest,\r\n         PermissionCreateResponse,\r\n         PermissionServiceCreateResponse,\r\n         PermissionServiceRouteCreateResponse } from 'src/interfaces/permission.interface';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceRouteList } from 'src/interfaces/service.route.interface';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.name\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.description\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(ngModel)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!this.form.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.serviceRoutes\">\r\n            <mat-list-option *ngFor=\"let route of serviceRouteList\" [value]=\"route.code\">\r\n            {{route.service}} [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionCreateComponent implements OnInit {\r\n  constructor(private svcPermission: PermissionService,\r\n              private svcServiceRoute: ServiceRouteService,\r\n              private svcService: ServiceService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcServiceRoute.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceRouteList>) => {\r\n      this.serviceRouteList = data.results\r\n    })\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })\r\n  }\r\n\r\n  serviceRouteList: ServiceRouteList[]\r\n  serviceList: ServiceList[]\r\n\r\n  form:PermissionCreateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: \"\",\r\n    serviceRoutes: [] as string[]\r\n  }\r\n\r\n  createdResponse: PermissionCreateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceCreateResponse,\r\n    serviceRoutes: [] as PermissionServiceRouteCreateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcPermission.post<PermissionCreateResponse, PermissionCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/permissions`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PermissionRead,\r\n         PermissionServiceRead,\r\n         PermissionServiceRouteRead,\r\n         PermissionDeleteResponse } from 'src/interfaces/permission.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"permission.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"permission.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"permission.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"permission.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"permission.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"permission.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"permission.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"permission.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!permission.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let route of permission.serviceRoutes\">\r\n            [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  permission: PermissionRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceRead,\r\n    serviceRoutes: [] as PermissionServiceRouteRead[]\r\n  }\r\n  deletedResponse: PermissionDeleteResponse\r\n  errors: string[] = []\r\n\r\n  constructor(private svcPermission: PermissionService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcPermission.retreive<PermissionRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.permission = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcPermission.delete<PermissionDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/permissions`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { PermissionList } from 'src/interfaces/permission.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-permission-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.description.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"hasAllAccess\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Has all access </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.hasAllAccess}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"service\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Service </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.service.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n\r\n\r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionListComponent implements OnInit {\r\n  constructor(private svcPermission: PermissionService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['name', 'description', 'hasAllAccess', 'service', 'code']\r\n  dataSource = new MatTableDataSource<PermissionList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcPermission.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<PermissionList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/permissions/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/permissions/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/permissions/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/permissions/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { PermissionRead,\r\n         PermissionServiceRead,\r\n         PermissionServiceRouteRead,\r\n         PermissionUpdateRequest,\r\n         PermissionUpdateResponse,\r\n         PermissionServiceUpdateResponse,\r\n         PermissionServiceRouteUpdateResponse } from 'src/interfaces/permission.interface';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceRouteList } from 'src/interfaces/service.route.interface';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.name\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.description\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(ngModel)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!this.form.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.serviceRoutes\">\r\n            <mat-list-option *ngFor=\"let route of serviceRouteList\" [value]=\"route.code\">\r\n            {{route.service}} [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionUpdateComponent implements OnInit {\r\n  constructor(private svcPermission: PermissionService,\r\n    private svcServiceRoute: ServiceRouteService,\r\n    private svcService: ServiceService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n      this.route.params.subscribe(({id}) => this.slug = id);\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.svcPermission.retreive<PermissionRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.name = item.name\r\n      this.form.description = item.description\r\n      this.form.hasAllAccess = item.hasAllAccess\r\n      this.form.service = item.service.code\r\n      this.form.serviceRoutes = item.serviceRoutes.map(a => a.code)\r\n    })\r\n    this.svcServiceRoute.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceRouteList>) => {\r\n      this.serviceRouteList = data.results\r\n    })\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })\r\n  }\r\n\r\n  slug: string\r\n\r\n  serviceRouteList: ServiceRouteList[]\r\n  serviceList: ServiceList[]\r\n\r\n  form:PermissionUpdateRequest = {\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: \"\",\r\n    serviceRoutes: [] as string[]\r\n  }\r\n\r\n  updatedResponse: PermissionUpdateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceUpdateResponse,\r\n    serviceRoutes: [] as PermissionServiceRouteUpdateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n   }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcPermission.put<PermissionUpdateResponse, PermissionUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/permissions`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PermissionService } from 'src/services/permission.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PermissionRead,\r\n         PermissionServiceRead,\r\n         PermissionServiceRouteRead } from 'src/interfaces/permission.interface';\r\n\r\n@Component({\r\n  selector: 'app-permission-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Permission Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"permission.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"permission.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"permission.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"permission.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"permission.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"permission.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"permission.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n        </mat-card>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"permission.hasAllAccess\">Has all access</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\" *ngIf=\"!permission.hasAllAccess\">\r\n          <mat-card-subtitle>\r\n            Service Routes\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let route of permission.serviceRoutes\">\r\n            [{{route.method}}] - {{route.url}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class PermissionViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  permission: PermissionRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    hasAllAccess: false,\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\"\r\n    } as PermissionServiceRead,\r\n    serviceRoutes: [] as PermissionServiceRouteRead[]\r\n  }\r\n\r\n  constructor(private svcPermission: PermissionService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/permissions`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcPermission.retreive<PermissionRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.permission = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { ServiceRouteCreateRequest, ServiceRouteCreateResponse } from 'src/interfaces/service.route.interface';\r\nimport { Router } from '@angular/router';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\n\r\n@Component({\r\n  selector: 'app-customer-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"this.form.url\" (input)=\"this.form.url = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Method</mat-label>\r\n          <mat-select [(value)]=\"this.form.method\">\r\n            <mat-option value=\"GET\">GET</mat-option>\r\n            <mat-option value=\"POST\">POST</mat-option>\r\n            <mat-option value=\"PUT\">PUT</mat-option>\r\n            <mat-option value=\"DELETE\">DELETE</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(value)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteCreateComponent implements OnInit {\r\n  constructor(private svcServiceRoute: ServiceRouteService,private svcService: ServiceService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })\r\n  }\r\n\r\n  serviceList: ServiceList[]\r\n\r\n  form:ServiceRouteCreateRequest = {\r\n    url: \"\",\r\n    method: \"\",\r\n    service: \"\"\r\n  }\r\n\r\n  createdResponse:ServiceRouteCreateResponse = {\r\n    code: \"\",\r\n    url: \"\",\r\n    method: \"\",\r\n    service: \"\"\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcServiceRoute.post<ServiceRouteCreateResponse, ServiceRouteCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/service-routes`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteRead,ServiceRouteServiceRead, ServiceRouteDeleteResponse } from 'src/interfaces/service.route.interface';\r\n\r\n@Component({\r\n  selector: 'app-customer-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"serviceRoute.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"serviceRoute.url\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Method</mat-label>\r\n          <input matInput [value]=\"serviceRoute.method\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n        </mat-card>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  serviceRoute: ServiceRouteRead = {\r\n    code: \"\",\r\n    url: \"\",\r\n    method: \"\",\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\",\r\n    } as ServiceRouteServiceRead\r\n  }\r\n  deletedResponse: ServiceRouteDeleteResponse\r\n  errors: string[] = []\r\n\r\n  constructor(private svcServiceRoute: ServiceRouteService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcServiceRoute.retreive<ServiceRouteRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.serviceRoute = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcServiceRoute.delete<ServiceRouteDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/service-routes`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceRouteList } from 'src/interfaces/service.route.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-service-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"url\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Url </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.url.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"method\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Method </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.method.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"service\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Service </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.service.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteListComponent implements OnInit {\r\n  constructor(private svcServiceRoute: ServiceRouteService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['url', 'method', 'service', 'code']\r\n  dataSource = new MatTableDataSource<ServiceRouteList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcServiceRoute.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceRouteList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/service-routes/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/service-routes/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/service-routes/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/service-routes/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteRead,\r\n         ServiceRouteServiceRead,\r\n         ServiceRouteUpdateRequest,\r\n         ServiceRouteUpdateResponse } from 'src/interfaces/service.route.interface';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceService } from 'src/services/service.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"this.form.url\" (input)=\"this.form.url = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Method</mat-label>\r\n          <mat-select [(value)]=\"this.form.method\">\r\n            <mat-option value=\"GET\">GET</mat-option>\r\n            <mat-option value=\"POST\">POST</mat-option>\r\n            <mat-option value=\"PUT\">PUT</mat-option>\r\n            <mat-option value=\"DELETE\">DELETE</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Service</mat-label>\r\n          <mat-select [(value)]=\"this.form.service\">\r\n            <mat-option *ngFor=\"let item of serviceList\" [value]=\"item.code\">{{item.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteUpdateComponent implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCustomers()\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.serviceList = data.results\r\n    })    \r\n  }\r\n\r\n  serviceList: ServiceList[]\r\n\r\n  slug: string\r\n  form:ServiceRouteUpdateRequest = {\r\n    url: \"\",\r\n    method: \"\",\r\n    service: \"\",\r\n  }\r\n  updatedResponse:ServiceRouteUpdateResponse\r\n\r\n  errors: string[] = []\r\n\r\n  constructor(private svcServiceRoute: ServiceRouteService,private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n  }\r\n  fetchCustomers () {\r\n    this.svcServiceRoute.retreive<ServiceRouteRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.url = item.url\r\n      this.form.method = item.method\r\n      this.form.service = item.service.code\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcServiceRoute.put<ServiceRouteUpdateResponse, ServiceRouteUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/service-routes`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceRouteService } from 'src/services/service.route.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRouteRead, ServiceRouteServiceRead } from 'src/interfaces/service.route.interface';\r\n\r\n@Component({\r\n  selector: 'app-service-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Route Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"serviceRoute.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Url</mat-label>\r\n          <input matInput [value]=\"serviceRoute.url\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Method</mat-label>\r\n          <input matInput [value]=\"serviceRoute.method\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Code</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.code\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Name</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.name\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service Description</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.description\" readonly>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-full\" disabled>\r\n            <mat-label>Service baseUrl</mat-label>\r\n            <input matInput [value]=\"serviceRoute.service.baseUrl\" readonly>\r\n          </mat-form-field>\r\n\r\n\r\n        </mat-card>\r\n\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceRouteViewComponent implements OnInit {\r\n\r\n  slug: string\r\n\r\n  serviceRoute: ServiceRouteRead = {\r\n    code: \"\",\r\n    url: \"\",\r\n    method: \"\",\r\n    service: {\r\n      code: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      baseUrl: \"\",\r\n    } as ServiceRouteServiceRead\r\n  }\r\n\r\n  constructor(private svcServiceRoute: ServiceRouteService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/service-routes`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcServiceRoute.retreive<ServiceRouteRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.serviceRoute = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { ServiceCreateRequest, ServiceCreateResponse } from 'src/interfaces/service.interface';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customer-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"this.form.baseUrl\" (input)=\"this.form.baseUrl = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceCreateComponent {\r\n  constructor(private svcService: ServiceService, private router: Router) { }\r\n\r\n  form:ServiceCreateRequest = {\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  createdResponse:ServiceCreateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcService.post<ServiceCreateResponse, ServiceCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/services`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRead, ServiceDeleteResponse } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-customer-delete',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Delete\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"service.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"service.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"service.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"service.baseUrl\" readonly>\r\n        </mat-form-field> \r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  service: ServiceRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    baseUrl: \"\"\r\n  }\r\n  deletedResponse: ServiceRead\r\n  errors: string[] = []\r\n\r\n  constructor(private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcService.retreive<ServiceRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.service = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcService.delete<ServiceDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/services`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { ServiceList } from 'src/interfaces/service.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-service-list',\r\n  template: `\r\n    \r\n    <mat-card style=\"margin:30px;\">\r\n      \r\n      <mat-card-title>\r\n        Service List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.description.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"baseUrl\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Base Url </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.baseUrl.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n        \r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator #appPaginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceListComponent implements OnInit {\r\n  constructor(private svcService: ServiceService, private router: Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['name', 'description', 'baseUrl', 'code']\r\n  dataSource = new MatTableDataSource<ServiceList>()\r\n\r\n  populateServices () {\r\n    this.svcService.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<ServiceList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/services/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/services/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/services/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/services/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRead, ServiceUpdateRequest, ServiceUpdateResponse } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-customer-update',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Update\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"this.form.name\" (input)=\"this.form.name = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"this.form.description\" (input)=\"this.form.description = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"this.form.baseUrl\" (input)=\"this.form.baseUrl = $event.target.value\">\r\n        </mat-form-field>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <span *ngFor=\"let error of errors\" class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceUpdateComponent implements OnInit {\r\n\r\n  slug: string\r\n  form:ServiceUpdateRequest = {\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\",\r\n  }\r\n  updatedResponse:ServiceUpdateResponse = {\r\n    code: \"\",\r\n    name: \"\",\r\n    baseUrl: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n  constructor(private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCustomers()\r\n  }\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n  }\r\n  fetchCustomers () {\r\n    this.svcService.retreive<ServiceRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcService.put<ServiceUpdateResponse, ServiceUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/services`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceService } from 'src/services/service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceRead } from 'src/interfaces/service.interface';\r\n\r\n@Component({\r\n  selector: 'app-service-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        Service Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"service.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput [value]=\"service.name\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput [value]=\"service.description\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Base Url</mat-label>\r\n          <input matInput [value]=\"service.baseUrl\" readonly>\r\n        </mat-form-field> \r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class ServiceViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  service: ServiceRead = {\r\n    code: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    baseUrl: \"\"\r\n  }\r\n\r\n  constructor(private svcService: ServiceService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/services`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcService.retreive<ServiceRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.service = item\r\n    })\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { UserCreateRequest,\r\n         UserCreateResponse,\r\n         UserGroupCreateResponse } from 'src/interfaces/user.interface';\r\nimport { Router } from '@angular/router';\r\nimport { GroupService } from 'src/services/group.service';\r\nimport { GroupList } from 'src/interfaces/group.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\n\r\n@Component({\r\n  selector: 'app-user-create',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        User Create\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Firstname</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.firstname\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Middlename</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.middlename\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Lastname</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.lastname\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Username</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.username\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Password</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.password\" type=\"password\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n          <mat-label>Email</mat-label>\r\n          <input matInput [(ngModel)]=\"this.form.email\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n        \r\n        <mat-form-field class=\"w-full\" appearance=\"fill\">\r\n          <mat-label>Birthdate</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"this.form.birthdate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isActive\">Is Active</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isSuperuser\">Is Superuser</mat-checkbox>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Groups\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense [(ngModel)]=\"this.form.groups\">\r\n            <mat-list-option *ngFor=\"let group of groupList\" [value]=\"group.code\">\r\n              {{group.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n        <br>\r\n\r\n        <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n          <div *ngFor=\"let error of errors\">\r\n            <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <br><br>\r\n\r\n        <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  constructor(private svcUser: UserService, private svcGroup: GroupService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.svcGroup.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<GroupList>) => {\r\n      this.groupList = data.results;\r\n    })\r\n  }\r\n\r\n  groupList: GroupList[]\r\n\r\n  form:UserCreateRequest = {\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as string[],\r\n  }\r\n\r\n  createdResponse:UserCreateResponse = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupCreateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n  \r\n  backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcUser.post<UserCreateResponse, UserCreateRequest>(this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.createdResponse = data\r\n      this.router.navigateByUrl(`/users`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRead,\r\n         UserGroupRead,\r\n         UserDeleteResponse,\r\n         UserGroupDeleteResponse } from 'src/interfaces/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-user-delete',\r\n  template: `\r\n  <mat-card style=\"margin:30px;\">\r\n    <mat-card-title>\r\n      User Delete\r\n    </mat-card-title>\r\n    <mat-card-subtitle>\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n    </mat-card-subtitle>\r\n\r\n    <mat-card-content style=\"display:flex-root\">\r\n\r\n      <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n      <br><br>\r\n\r\n      <mat-form-field class=\"w-full\" disabled>\r\n        <mat-label>Code</mat-label>\r\n        <input matInput [value]=\"user.code\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Firstname</mat-label>\r\n        <input matInput [value]=\"user.firstname\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Middlename</mat-label>\r\n        <input matInput [value]=\"user.middlename\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Lastname</mat-label>\r\n        <input matInput [value]=\"user.lastname\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Username</mat-label>\r\n        <input matInput [value]=\"user.username\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput [value]=\"user.email\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>Birthdate</mat-label>\r\n        <input matInput [value]=\"user.birthdate\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>IsActive</mat-label>\r\n        <input matInput [value]=\"user.isActive\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-form-field class=\"w-full\">\r\n        <mat-label>IsSuperuser</mat-label>\r\n        <input matInput [value]=\"user.isSuperuser\" readonly>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <mat-card class=\"mat-elevation-z0\">\r\n        <mat-card-subtitle>\r\n          Groups\r\n        </mat-card-subtitle>\r\n        <mat-selection-list dense>\r\n          <mat-list-option *ngFor=\"let group of user.groups\">\r\n            {{group.name}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-card>\r\n\r\n      <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n        <div *ngFor=\"let error of errors\">\r\n          <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n        </div>\r\n      </mat-card>\r\n\r\n      <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n  `,\r\n})\r\nexport class UserDeleteComponent implements OnInit {\r\n\r\n  slug: string\r\n  user: UserRead = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupRead[]\r\n  }\r\n  deletedResponse: UserDeleteResponse\r\n  errors: string[] = []\r\n\r\n  constructor(private svcUser: UserService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcUser.retreive<UserRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.user = item\r\n    })\r\n  }\r\n\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcUser.delete<UserDeleteResponse>(this.slug)\r\n    .subscribe(\r\n    data => {\r\n      this.deletedResponse = data\r\n      this.router.navigateByUrl(`/users`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { UserList } from 'src/interfaces/user.interface';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        User List\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.create()\"><mat-icon>add</mat-icon></button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\r\n\r\n          <ng-container matColumnDef=\"firstname\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Firstname </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.firstname.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"middlename\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Middlename </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.middlename.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"lastname\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Lastname </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.lastname.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"username\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.username.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.email.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"birthdate\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Birthdate </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.birthdate.trimByMaxCharacter(30)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"isActive\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> IsActive </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.isActive}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"isSuperuser\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> IsSuperuser </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.isSuperuser}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"code\">\r\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n            <td mat-cell *matCellDef=\"let item\">\r\n              <mat-menu #matMenu=\"matMenu\">\r\n                <ng-template matMenuContent>\r\n                  <button mat-menu-item (click)=\"this.view(item.code)\">View</button>\r\n                  <button mat-menu-item (click)=\"this.update(item.code)\">Update</button>\r\n                  <button mat-menu-item (click)=\"this.delete(item.code)\">Delete</button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <button mat-icon-button [matMenuTriggerFor]=\"matMenu\"><mat-icon>more_vert</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  constructor(private svcUser: UserService, private router: Router) { }\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['firstname',\r\n                                'middlename',\r\n                                'lastname',\r\n                                'username',\r\n                                'email',\r\n                                'birthdate',\r\n                                'isActive',\r\n                                'isSuperuser',\r\n                                'code']\r\n  dataSource = new MatTableDataSource<UserList>()\r\n\r\n  ngOnInit(): void {\r\n    this.populateServices()\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  populateServices () {\r\n    this.svcUser.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<UserList>) => {\r\n      this.dataSource.data = data.results\r\n    })\r\n  }\r\n\r\n  view (id: number) {\r\n    this.router.navigateByUrl(`/users/view/${id}`)\r\n  }\r\n  create () {\r\n    this.router.navigateByUrl(`/users/create`)\r\n  }\r\n  update (id: number) {\r\n    this.router.navigateByUrl(`/users/update/${id}`)\r\n  }\r\n  delete (id: number) {\r\n    this.router.navigateByUrl(`/users/delete/${id}`)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRead,\r\n         UserGroupRead,\r\n         UserUpdateRequest,\r\n         UserUpdateResponse,\r\n         UserGroupUpdateResponse } from 'src/interfaces/user.interface';\r\nimport { PaginationQuery } from 'src/services/z.service';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { GroupList } from 'src/interfaces/group.interface';\r\nimport { GroupService } from 'src/services/group.service';\r\n\r\n@Component({\r\n  selector: 'app-user-update',\r\n  template: `\r\n  <mat-card style=\"margin:30px;\">\r\n  <mat-card-title>\r\n    User Update\r\n  </mat-card-title>\r\n  <mat-card-subtitle>\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n  </mat-card-subtitle>\r\n\r\n  <mat-card-content style=\"display:flex-root\">\r\n\r\n    <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n    <br><br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Firstname</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.firstname\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Middlename</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.middlename\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Lastname</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.lastname\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.username\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\" dense>\r\n      <mat-label>Email</mat-label>\r\n      <input matInput [(ngModel)]=\"this.form.email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field class=\"w-full\" appearance=\"fill\">\r\n      <mat-label>Birthdate</mat-label>\r\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"this.form.birthdate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isActive\">Is Active</mat-checkbox>\r\n\r\n    <br>\r\n    <br>\r\n\r\n    <mat-checkbox class=\"w-full\" [(ngModel)]=\"this.form.isSuperuser\">Is Superuser</mat-checkbox>\r\n\r\n    <br>\r\n    <br>\r\n\r\n    <mat-card class=\"mat-elevation-z0\">\r\n      <mat-card-subtitle>\r\n        Groups\r\n      </mat-card-subtitle>\r\n      <mat-selection-list dense [(ngModel)]=\"this.form.groups\">\r\n        <mat-list-option *ngFor=\"let group of groupList\" [value]=\"group.code\">\r\n          {{group.name}}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </mat-card>\r\n\r\n    <br>\r\n\r\n    <mat-card *ngIf=\"errors.length > 0\" class=\"mat-elevation-z0\">\r\n      <div *ngFor=\"let error of errors\">\r\n        <span class=\"mat-caption\" style=\"color:maroon\">{{error}}</span>\r\n      </div>\r\n    </mat-card>\r\n\r\n    <br><br>\r\n\r\n    <button mat-stroked-button color=\"primary\" (click)=\"this.Submit()\">Submit</button>\r\n\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n  `,\r\n})\r\nexport class UserUpdateComponent implements OnInit {\r\n  constructor(private svcUser: UserService, private svcGroup: GroupService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.svcUser.retreive<UserRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.form.firstname = item.firstname\r\n      this.form.middlename = item.middlename\r\n      this.form.lastname = item.lastname\r\n      this.form.username = item.username\r\n      this.form.email = item.email\r\n      this.form.birthdate = item.birthdate\r\n      this.form.isActive = item.isActive\r\n      this.form.isSuperuser = item.isSuperuser\r\n      this.form.groups = item.groups.map(a => a.code)\r\n    })\r\n\r\n    this.svcGroup.paginate(new PaginationQuery(0, 0, '', ''))\r\n    .subscribe((data: PaginatedResponse<GroupList>) => {\r\n      this.groupList = data.results;\r\n    })\r\n  }\r\n\r\n  slug: string = \"\"\r\n  groupList: GroupList[]\r\n\r\n  form:UserUpdateRequest = {\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as string[],\r\n  }\r\n\r\n  updatedResponse:UserUpdateResponse = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupUpdateResponse[]\r\n  }\r\n\r\n  errors: string[] = []\r\n\r\n  backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n  }\r\n  Submit () {\r\n    this.errors = [] as string[]\r\n    this.svcUser.put<UserUpdateResponse, UserUpdateRequest>(this.slug, this.form)\r\n    .subscribe(\r\n    data => {\r\n      this.updatedResponse = data\r\n      this.router.navigateByUrl(`/users`)\r\n    },\r\n    ({error}) => {\r\n      this.errors = error\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRead, UserGroupRead } from 'src/interfaces/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-user-view',\r\n  template: `\r\n    <mat-card style=\"margin:30px;\">\r\n      <mat-card-title>\r\n        User Details\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-content style=\"display:flex-root\">\r\n\r\n        <button mat-icon-button color=\"primary\" (click)=\"this.backToList()\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n        <br><br>\r\n\r\n        <mat-form-field class=\"w-full\" disabled>\r\n          <mat-label>Code</mat-label>\r\n          <input matInput [value]=\"user.code\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Firstname</mat-label>\r\n          <input matInput [value]=\"user.firstname\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Middlename</mat-label>\r\n          <input matInput [value]=\"user.middlename\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Lastname</mat-label>\r\n          <input matInput [value]=\"user.lastname\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput [value]=\"user.username\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput [value]=\"user.email\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Birthdate</mat-label>\r\n          <input matInput [value]=\"user.birthdate\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>IsActive</mat-label>\r\n          <input matInput [value]=\"user.isActive\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>IsSuperuser</mat-label>\r\n          <input matInput [value]=\"user.isSuperuser\" readonly>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-card class=\"mat-elevation-z0\">\r\n          <mat-card-subtitle>\r\n            Groups\r\n          </mat-card-subtitle>\r\n          <mat-selection-list dense>\r\n            <mat-list-option *ngFor=\"let group of user.groups\">\r\n              {{group.name}}\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-card>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n})\r\nexport class UserViewComponent implements OnInit {\r\n\r\n  slug: string\r\n  user: UserRead = {\r\n    code: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    birthdate: \"\",\r\n    isActive: false,\r\n    isSuperuser: false,\r\n    groups: [] as UserGroupRead[]\r\n  }\r\n\r\n  constructor(private svcUser: UserService, private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(({id}) => this.slug = id);\r\n   }\r\n\r\n   backToList () {\r\n    this.router.navigateByUrl(`/users`)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices()\r\n  }\r\n\r\n  fetchServices () {\r\n    this.svcUser.retreive<UserRead>(this.slug)\r\n    .subscribe(item => {\r\n      this.user = item\r\n    })\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_HOST: \"http://localhost:5000\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","interface String {\r\n  trimByMaxCharacter(maxCharacter: number): string;\r\n}\r\n\r\nString.prototype.trimByMaxCharacter = function (maxCharacter: number) : string {\r\n  if (this && this.length > maxCharacter) {\r\n    return `${this.substr(0, maxCharacter)}...` as string\r\n  }\r\n  return this as string;\r\n}","export function IsServer () {\r\n    return ! (typeof window != 'undefined' && window.document);\r\n}\r\nexport function IsClient () {\r\n    return (typeof window != 'undefined' && window.document);\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\nimport { LoginRequest, LoginResponse, CurrentUser } from 'src/interfaces/auth.interface';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/auth/')\r\n   }\r\n\r\n   isAuthenticated: boolean = false\r\n   currentUser: CurrentUser\r\n\r\n   Login (form: LoginRequest) : Observable<LoginResponse> {\r\n    return this.post<LoginResponse, LoginRequest>(form, 'login')\r\n   }\r\n\r\n   FetchCurrentUser () : Observable<CurrentUser> {\r\n    return this.retreive<CurrentUser>('current-user')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class GroupService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Groups/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class PermissionService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Permissions/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class ServiceRouteService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/ServiceRoutes/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class ServiceService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Services/')\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenericService } from './z.service';\r\n\r\n@Injectable()\r\nexport class UserService extends GenericService {\r\n  constructor(http: HttpClient) {\r\n    super(http, '/api/admin/Users/')\r\n   }\r\n}","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { PaginatedResponse } from 'src/interfaces/paginated.response';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IsClient } from 'src/helpers/processHelper';\r\n\r\nexport class PaginationQuery {\r\n  constructor (public pageNumber: number,\r\n               public pageSize: number,\r\n               public filter: string,\r\n               public sortOrder: string) {\r\n  }\r\n}\r\n\r\nexport class GenericService{\r\n  constructor(private http: HttpClient, private baseUrl: string) {\r\n    \r\n    // TODO: Put this in config\r\n    this.apiHost = environment.API_HOST\r\n\r\n    this.url = `${this.apiHost}${baseUrl}`\r\n\r\n    if (IsClient()) {\r\n      let cookieObject = (Object as any).fromEntries(document.cookie.split(/; */).map(c => {\r\n          const [ key, ...v ] = c.split('=');\r\n          return [ key, decodeURIComponent(v.join('=')) ];\r\n      }));\r\n\r\n      this.token = cookieObject.access_token\r\n    }\r\n  }\r\n\r\n  apiHost: string\r\n  url: string\r\n  token: string\r\n\r\n  paginate<TResult> (pagination: PaginationQuery) {\r\n    // let params = new HttpParams()\r\n    // if (filter)     params.append('filter', filter)\r\n    // if (sortOrder)  params.append('sortOrder', sortOrder)\r\n    // if (pageNumber) params.append('pageNumber', pageNumber.toString())\r\n    // if (pageSize)   params.append('pageSize', pageSize.toString())\r\n    // return this.http.get<T[]>(this.url, {\r\n    //   params\r\n    // })\r\n    return this.http.get<PaginatedResponse<TResult>>(this.url, {\r\n      params: new HttpParams().set('filter', pagination.filter ? pagination.filter : '')\r\n                              .set('sortOrder', pagination.sortOrder ? pagination.sortOrder : '')\r\n                              .set('pageNumber', pagination.pageNumber ? pagination.pageNumber.toString() : '')\r\n                              .set('pageSize', pagination.pageSize ? pagination.pageSize.toString() : ''),\r\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)\r\n    })\r\n  }\r\n  retreive<TResult> (slug: string) {\r\n    return this.http.get<TResult>(`${this.url}${slug}`, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  post<TResult,TRequest> (body: TRequest, slug?: string) {\r\n    return this.http.post<TResult>(`${this.url}${slug ? slug : ''}`, body, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  put<TResult,TRequest> (slug: string, body: TRequest) {\r\n    return this.http.put<TResult>(`${this.url}${slug}`, body, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  patch<TResult,TRequest> (slug: string, body: TRequest) {\r\n    return this.http.patch<TResult>(`${this.url}${slug}`, body, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n  delete<TResult> (slug: string) {\r\n    return this.http.delete<TResult>(`${this.url}${slug}`, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)});\r\n  }\r\n}"],"sourceRoot":"webpack:///"}