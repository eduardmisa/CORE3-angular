version: 2.1

jobs:
  install_rebuild:
    machine:
      image: ubuntu-1604:202007-01
    working_directory: ~/src
    steps:
      - checkout

      - run:
          name: Install DOTNET CLI
          command: |
            wget https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y dotnet-sdk-3.1
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y aspnetcore-runtime-3.1

      - run:
          name: Install Requirements in Venv
          command: |
            cp CORE/*.csproj ./
            dotnet restore

      - run:
          name: Build Application
          command: |
            dotnet build --configuration Release

      - run:
          name: Compress Build Files
          command: |
            mkdir compressed_build
            touch compressed_build/BUILD.tar.gz
            tar -zcvf compressed_build/BUILD.tar.gz --exclude=./compressed_build .

      - run:
          name: Remember Host RSA Key for this session
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST exit

      - run:
          name: Upload Build Files to Server
          command: |
            scp -r deploy/cicd/DEPLOYMENT_SCRIPT.sh $SSH_USER@$SSH_HOST:$BUILD_DUMP_PATH
            scp -r compressed_build/BUILD.tar.gz $SSH_USER@$SSH_HOST:$BUILD_DUMP_PATH

      - run:
          name: Run Pre-Deployment Script
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "sudo sh $BUILD_DUMP_PATH/DEPLOYMENT_SCRIPT.sh"

      - run:
          name: REMOVING EXISTING CONTAINER SERVICES
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "sudo docker-compose -f $DEPLOYMENT_PATH/docker-compose.yml down"

      - run:
          name: CREATING NEW CONTAINER SERVICES
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "sudo docker-compose -f $DEPLOYMENT_PATH/docker-compose.yml up -d --build"


      - store_artifacts:
          path: compressed_build/

# ORCHESTRATION
workflows:
  deploy_to_aws:
    jobs:
      - install_rebuild:
          filters:
            branches:
              only: master